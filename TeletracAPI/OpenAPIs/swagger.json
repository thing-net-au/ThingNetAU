{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "NextGen API"
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "auth"
  }, {
    "name" : "dashboard"
  }, {
    "name" : "links"
  }, {
    "name" : "permissions"
  }, {
    "name" : "ping"
  }, {
    "name" : "privacy"
  }, {
    "name" : "qs"
  }, {
    "name" : "test"
  }, {
    "name" : "alert"
  }, {
    "name" : "announcements"
  }, {
    "name" : "audit"
  }, {
    "name" : "availablekits"
  }, {
    "name" : "bulkimport"
  }, {
    "name" : "calendar"
  }, {
    "name" : "carrier"
  }, {
    "name" : "companies"
  }, {
    "name" : "compatiblemodels"
  }, {
    "name" : "configuration"
  }, {
    "name" : "devicesbulk"
  }, {
    "name" : "devices"
  }, {
    "name" : "devicetypes"
  }, {
    "name" : "documents"
  }, {
    "name" : "vehiclesengineprofiles"
  }, {
    "name" : "enrolments"
  }, {
    "name" : "fleets"
  }, {
    "name" : "folders"
  }, {
    "name" : "forms"
  }, {
    "name" : "geofences"
  }, {
    "name" : "Guaranteed Delivery"
  }, {
    "name" : "inspections"
  }, {
    "name" : "installkits"
  }, {
    "name" : "iotrips"
  }, {
    "name" : "journeys"
  }, {
    "name" : "locationtypes"
  }, {
    "name" : "locations"
  }, {
    "name" : "messages"
  }, {
    "name" : "meterthresholds"
  }, {
    "name" : "netradyne"
  }, {
    "name" : "notifications"
  }, {
    "name" : "pretripchecklists"
  }, {
    "name" : "regions"
  }, {
    "name" : "register"
  }, {
    "name" : "roles"
  }, {
    "name" : "sapitems"
  }, {
    "name" : "schedules"
  }, {
    "name" : "smartjobs"
  }, {
    "name" : "timezones"
  }, {
    "name" : "trips"
  }, {
    "name" : "types"
  }, {
    "name" : "users2"
  }, {
    "name" : "users"
  }, {
    "name" : "vehiclecompatibility"
  }, {
    "name" : "massmanagement"
  }, {
    "name" : "vehiclemodels"
  }, {
    "name" : "vehiclesreport"
  }, {
    "name" : "vehicles"
  }, {
    "name" : "vehicletypes"
  }, {
    "name" : "voip"
  }, {
    "name" : "wifi"
  }, {
    "name" : "bulkimportevents"
  }, {
    "name" : "events"
  }, {
    "name" : "positions"
  }, {
    "name" : "futureactions"
  }, {
    "name" : "installations"
  }, {
    "name" : "installationsreport"
  } ],
  "paths" : {
    "/auth/pwd" : {
      "post" : {
        "tags" : [ "auth" ],
        "operationId" : "changePassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth/pwd/reset/token" : {
      "post" : {
        "tags" : [ "auth" ],
        "operationId" : "generateResetPasswordToken",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth/pwd/reset" : {
      "put" : {
        "tags" : [ "auth" ],
        "summary" : "Reset a user's password",
        "description" : "",
        "operationId" : "resetPassword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth/impersonate" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Returns auth details of user to be impersonated",
        "description" : "A token key is required for this call.",
        "operationId" : "authUserImpersonate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth/sso" : {
      "get" : {
        "tags" : [ "auth" ],
        "operationId" : "authSSO",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "hmac",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth" : {
      "post" : {
        "tags" : [ "auth" ],
        "operationId" : "authUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clearSessions",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/dashboard" : {
      "get" : {
        "tags" : [ "dashboard" ],
        "summary" : "Look up dashboard information",
        "description" : "A token key is required for this call.",
        "operationId" : "stats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Search direction across company hierarchy, options: DOWN, NONE, default: DOWN",
          "required" : false,
          "type" : "string",
          "default" : "DOWN"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      }
    },
    "/authsso" : {
      "get" : {
        "operationId" : "authSSO",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "user_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "hmac",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/links/verify" : {
      "get" : {
        "tags" : [ "links" ],
        "summary" : "Create a temporary link to tracking view",
        "description" : "A token key is required for this call.",
        "operationId" : "verifyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "p",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "h",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/links/tracking" : {
      "post" : {
        "tags" : [ "links" ],
        "summary" : "Create a temporary link to tracking view",
        "description" : "A token key is required for this call.",
        "operationId" : "createTrackingLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TrackingLinkReq"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/links/pod" : {
      "post" : {
        "tags" : [ "links" ],
        "summary" : "Create a temporary link to a specific POD",
        "description" : "A token key is required for this call.",
        "operationId" : "createPODLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PODLinkReq"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/permissions" : {
      "get" : {
        "tags" : [ "permissions" ],
        "summary" : "Get enabled services and permissions for the user",
        "description" : "A user token key is required for this call",
        "operationId" : "getPermissions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PermissionResponse"
            }
          }
        }
      }
    },
    "/permissions/metadata" : {
      "get" : {
        "tags" : [ "permissions" ],
        "summary" : "Get permission metadata",
        "description" : "A user token key is required for this call",
        "operationId" : "getPermissionsMetadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Permission"
              }
            }
          }
        }
      }
    },
    "/ping" : {
      "get" : {
        "tags" : [ "ping" ],
        "operationId" : "ping",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/privacy/consents" : {
      "get" : {
        "tags" : [ "privacy" ],
        "summary" : "Provide consent metadata",
        "description" : "A token key is required for this call.",
        "operationId" : "getConsentMetadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/folders" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "List Folders",
        "description" : "A token key is required for this call",
        "operationId" : "listFolders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "max-results",
          "in" : "query",
          "description" : "The maximum number of results to be returned per request. (1-100, default 100)",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "next-token",
          "in" : "query",
          "description" : "The token for the next set of results, or null if there are no more results",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/embed/console" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "generateEmbedUrlForRegisteredUser",
        "description" : "A token key is required for this call",
        "operationId" : "getConsole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entry-point",
          "in" : "query",
          "description" : "The initial URL path for the Amazon QuickSight console, default to /start",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "session-lifetime",
          "in" : "query",
          "description" : "How many minutes the session is valid. The session lifetime must be 15-600 minutes",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/folders/{folderId}/members" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "List Folder Members",
        "description" : "A token key is required for this call",
        "operationId" : "listFolderMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "max-results",
          "in" : "query",
          "description" : "The maximum number of results to be returned per request. (1-100, default 100)",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "next-token",
          "in" : "query",
          "description" : "The token for the next set of results, or null if there are no more results",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/dashboards/{dashboardId}" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "Provides a summary for a dashboard",
        "description" : "A token key is required for this call",
        "operationId" : "describeDashboard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "alias-name",
          "in" : "query",
          "description" : "The alias name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version-number",
          "in" : "query",
          "description" : "The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/analyses/{analysisId}" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "Provides a summary of the metadata for an analysis",
        "description" : "A token key is required for this call",
        "operationId" : "describeAnalysis",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "analysisId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/embed/dashboards/{dashboardId}" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "Generates a temporary session URL and authorization code to embed a read-only dashboard",
        "description" : "A token key is required for this call",
        "operationId" : "getDashboardEmbedUrl",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creds-type",
          "in" : "query",
          "description" : "The authentication method that the user users to sign in (IAM | QUICKSIGHT | ANONYMOUS, default QUICKSIGHT)",
          "required" : false,
          "type" : "string",
          "default" : "QUICKSIGHT"
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "The Amazon QuickSight namespace that contains the dashboard IDs in this request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reset-disabled",
          "in" : "query",
          "description" : "Remove the reset button on the embedded dashboard",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "undo-redo-disabled",
          "in" : "query",
          "description" : "Remove the undo/redo button on the embedded dashboard",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "session-lifetime",
          "in" : "query",
          "description" : "How many minutes the session is valid. The session lifetime must be 15-600 minutes",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "state-persistence-enabled",
          "in" : "query",
          "description" : "Adds persistence of state for the user session in an embedded dashboard",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/embed/qsearchbar" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "Generates an embed URL to embed an Amazon QuickSight experience",
        "description" : "A token key is required for this call",
        "operationId" : "getUserEmbedUrl",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "initial-topic-id",
          "in" : "query",
          "description" : "The ID of the Q topic that you want to make the starting topic in the Q search bar",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "allowed-domains",
          "in" : "query",
          "description" : "Comma separated list of domains that to add to the allow list for access to the generated URL that is then embedded",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "session-lifetime",
          "in" : "query",
          "description" : "How many minutes the session is valid. The session lifetime must be 15-600 minutes",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/qs/thumbnail" : {
      "get" : {
        "tags" : [ "qs" ],
        "summary" : "Generates an embed URL to embed an Amazon QuickSight experience",
        "description" : "A token key is required for this call",
        "operationId" : "getDashboardThumbnail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/test/error" : {
      "get" : {
        "tags" : [ "test" ],
        "operationId" : "errorMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/test/formattederror" : {
      "get" : {
        "tags" : [ "test" ],
        "operationId" : "errorMessageFormat",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/alert/config/form" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getFormAlertAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergeFormAlertAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/geofence" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGeofenceAlertAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergeGeofenceAlertAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/meterthreshold/{subscriptionid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getMeterThresholdAlertAssociationsBySubscriptionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriptionid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Get an alert subscription configuration by type",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAlertConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "alert type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergeSubscription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/{id}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Get an alert subscription configuration by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAlertConfigById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Get all alert subscription configurations",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAlertSubscriptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_type",
          "in" : "query",
          "description" : "entity type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entity_id",
          "in" : "query",
          "description" : "entity id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/form/{subscriptionid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getFormAlertAssociationsBySubscriptionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriptionid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/pretripchecklist" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPreTripChecklistAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergePreTripCheckListAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/pretripchecklist/{subscriptionid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPreTripChecklistAssociationsBySubscriptionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriptionid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/geofence/{subscriptionid}" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGeofenceAlertAssociationsBySubscriptionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriptionid",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/config/meterthreshold" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getMeterThresholdAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergeMeterThresholdAlertAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/globalsettings" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGlobalSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_type",
          "in" : "query",
          "description" : "entity type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entity_id",
          "in" : "query",
          "description" : "entity id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alert" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "mergeGlobalSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_type",
          "in" : "query",
          "description" : "entity alertType",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entity_id",
          "in" : "query",
          "description" : "entity id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "alert alertType",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "active",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/alert/{id}" : {
      "delete" : {
        "tags" : [ "alert" ],
        "summary" : "Delete alert by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "deleteAlert",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/alert/gpiotypes" : {
      "get" : {
        "tags" : [ "alert" ],
        "summary" : "Get a list of gpip types",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGPIOTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/announcements" : {
      "get" : {
        "tags" : [ "announcements" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAnnouncements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "default to 5 recent announcement",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Announcement"
              }
            }
          }
        }
      }
    },
    "/audit/{type}/{entity_id}" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAudits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Entity type, supported values are: company, fleet, vehicle, geofence, user, customer, subscription, subscription_pack, location, runsheet, job, attachment, message, driver_event, fatigue_event, ptc_event, form, form_event, vehicle_type, contact, shift, registration_code, role, device_agreement, geofence_association, vehicle_maintenance_type, folder, vehicle_maintenance_schedule, schedule, trip, device_configuration, wifi",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entity_id",
          "in" : "path",
          "description" : "Entity Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company or user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/availablekits/{id}" : {
      "get" : {
        "tags" : [ "availablekits" ],
        "summary" : "Get a available kit by ID",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AvailableKit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "availablekits" ],
        "summary" : "Update existing available kit",
        "description" : "An API key is required for performing this action",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AvailableKit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AvailableKit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "availablekits" ],
        "summary" : "Delete existing available kit",
        "description" : "An API key is required for performing this action",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/availablekits" : {
      "get" : {
        "tags" : [ "availablekits" ],
        "summary" : "Get a list of all available kits",
        "description" : "An API key is required for performing this action",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AvailableKit"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "availablekits" ],
        "summary" : "Create a new available kit",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AvailableKit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AvailableKit"
            }
          }
        }
      }
    },
    "/bulkimport" : {
      "get" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Get bulk import list",
        "description" : "A token key is required for this call.",
        "operationId" : "getList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BulkImport"
              }
            }
          }
        }
      }
    },
    "/bulkimport/status/{batchId}" : {
      "get" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Get bulk import batch status",
        "description" : "A token key is required for this call.",
        "operationId" : "getBulkImportStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BulkImportStatus"
            }
          }
        }
      }
    },
    "/bulkimport/errors/{batchId}" : {
      "get" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Get bulk import batch status",
        "description" : "A token key is required for this call.",
        "operationId" : "getBulkImportErrors",
        "produces" : [ "text/csv", "application/geo+json" ],
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/bulkimport/templates/{templateId}" : {
      "get" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Get bulk import raw template",
        "description" : "A token key is required for this call.",
        "operationId" : "getBulkImportTemplateById",
        "produces" : [ "text/csv", "application/geo+json" ],
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/bulkimport/templates" : {
      "get" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Get bulk import list",
        "description" : "A token key is required for this call.",
        "operationId" : "getTemplateList",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/bulkimport/upload" : {
      "post" : {
        "tags" : [ "bulkimport" ],
        "summary" : "Upload and import geofence",
        "description" : "A token key is required for this call.",
        "operationId" : "importFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "uploadParams",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BulkImportStatus"
            }
          }
        }
      }
    },
    "/calendar/config" : {
      "post" : {
        "tags" : [ "calendar" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "merge",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_id",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/carrier/company/{id}" : {
      "get" : {
        "tags" : [ "carrier" ],
        "summary" : "Retrieve a list of carrier",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Carrier"
              }
            }
          }
        }
      }
    },
    "/carrier" : {
      "post" : {
        "tags" : [ "carrier" ],
        "summary" : "Add a new carrier",
        "description" : "A token key is required for this call.",
        "operationId" : "merge",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Carrier"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Carrier"
            }
          }
        }
      }
    },
    "/carrier/{id}" : {
      "get" : {
        "tags" : [ "carrier" ],
        "summary" : "Retrieve a carrier",
        "description" : "A token key is required for this call.",
        "operationId" : "getCarrier",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Carrier"
            }
          }
        }
      }
    },
    "/companies" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Retrieve a list of companies",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Optional parameter for company hierarchy (BOTH, UP, DOWN, ANCESTOR), will return full company list for site admin if specified",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "active",
          "in" : "query",
          "description" : "Optional parameter for company returning enabled/disabled companies ",
          "required" : false,
          "type" : "string",
          "default" : "true"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "embed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "companies" ],
        "summary" : "Add a new company",
        "description" : "A token key is required for this call.",
        "operationId" : "insertCompany",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      }
    },
    "/companies/{id}" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Retrieve a company by ID or SLUG",
        "description" : "A token key is required for this call.",
        "operationId" : "findByIdOrSlugOrExternalId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "embed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "companies" ],
        "summary" : "Update a company",
        "description" : "A token key is required for this call.",
        "operationId" : "updateCompany",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "companies" ],
        "summary" : "Disable a company",
        "description" : "A token key is required for this call.",
        "operationId" : "disableCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/companies/merge" : {
      "post" : {
        "tags" : [ "companies" ],
        "operationId" : "mergeCompany",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/companies/{id}/keys" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Retrieve a company's API keys by ID or SLUG",
        "description" : "A token key is required for this call.",
        "operationId" : "getApiKeys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key_type",
          "in" : "query",
          "description" : "Key Type",
          "required" : false,
          "type" : "string",
          "default" : "all",
          "enum" : [ "all", "api", "login", "user" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApiKey"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/fleets" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Deprecated",
        "description" : "Scheduled for removal",
        "operationId" : "listByCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_types",
          "in" : "query",
          "description" : "Type of devices to be included",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/services" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Lists service codes available for the company",
        "description" : "A token key is required for this call.",
        "operationId" : "getServicesByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "Options: features",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/snapshots" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "",
        "description" : "Get the latest snapshots attachments of a company in a given month. A token key is required for this call.",
        "operationId" : "getSnapshots",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "The month between 1 and 12 of current year.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "year",
          "in" : "query",
          "description" : "The year between 2000 and current year.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/videorequests" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "",
        "description" : "Get the latest video request events of a company in a given date range. A token key is required for this call.",
        "operationId" : "getVideoEventRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Company ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Start date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VideoRequestEvent"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/{type}/config" : {
      "get" : {
        "tags" : [ "companies" ],
        "summary" : "Get company defined config for the given company and given id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getCompanyDefinedConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provider",
          "in" : "query",
          "description" : "Camera provider (only for camera)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "companies" ],
        "summary" : "Set company config for the given company and given id",
        "description" : "A user token key is required for this call.",
        "operationId" : "createOrUpdateCompanyDefinedConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      }
    },
    "/companies/{id}/{type}/config/{configId}" : {
      "delete" : {
        "tags" : [ "companies" ],
        "summary" : "Delete company defined config for the given company and given id",
        "description" : "A user token key is required for this call.",
        "operationId" : "deleteCompanyDefinedConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "configId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      }
    },
    "/compatiblemodels/{id}" : {
      "get" : {
        "tags" : [ "compatiblemodels" ],
        "summary" : "Get a compatible model by id",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CompatibleModel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "compatiblemodels" ],
        "summary" : "Update existing compatible model",
        "description" : "An API key is required for performing this action",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompatibleModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CompatibleModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "compatiblemodels" ],
        "summary" : "Delete existing compatible model",
        "description" : "An API key is required for performing this action",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/compatiblemodels" : {
      "get" : {
        "tags" : [ "compatiblemodels" ],
        "summary" : "Get a list of all compatible models ",
        "description" : "An API key is required for performing this action",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CompatibleModel"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "compatiblemodels" ],
        "summary" : "Create a new compatible model",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompatibleModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CompatibleModel"
            }
          }
        }
      }
    },
    "/configuration/keys" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Retrieve configuration key metadata",
        "description" : "A token key is required for this call.",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "service",
          "in" : "query",
          "description" : "Find keys for specified service",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Find keys specified with 'customer_access' flag",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConfigKey"
              }
            }
          }
        }
      }
    },
    "/configuration/{id}" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Lookup a specific config key",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConfigKey"
            }
          }
        }
      }
    },
    "/configuration/values" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Get device config values by vehicle type scope",
        "description" : "A token key is required for this call.",
        "operationId" : "getDeviceConfigValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicle_type_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_id",
          "in" : "query",
          "description" : "Comma separated Device IDs",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "Find device config values for specified service",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceConfiguration"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "configuration" ],
        "summary" : "Insert or update device config values",
        "description" : "A token key is required for this call.",
        "operationId" : "updateDeviceConfigValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeviceConfiguration"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/configuration/bulk/values" : {
      "post" : {
        "tags" : [ "configuration" ],
        "summary" : "Insert or update device config values in bulk. Support for partial failure",
        "description" : "A token key is required for this call.",
        "operationId" : "bulkUpdateDeviceConfigValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeviceConfiguration"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/configuration/values/delete" : {
      "post" : {
        "tags" : [ "configuration" ],
        "summary" : "Delete device config values",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteDeviceConfigValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeviceConfiguration"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/bulk" : {
      "put" : {
        "tags" : [ "devicesbulk" ],
        "summary" : "Bulk update devices",
        "description" : "A token key is required for this call.",
        "operationId" : "updateDevices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "devicesbulk" ],
        "summary" : "Disable devices",
        "description" : "A token key is required for this call.",
        "operationId" : "disableDevices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/devices/{imei}/health2" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Return health info by ID or IMEI",
        "description" : "A token key is required for this call.",
        "operationId" : "getHealthVersion2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceHealth2"
            }
          }
        }
      }
    },
    "/devices/{imei}/installer_test/satellite" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Send MDM command to test Satellite communication",
        "description" : "A token key is required for this call.",
        "operationId" : "testSatellite",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "description" : "Device Imei",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{imei}/health" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Return health info by ID or IMEI",
        "description" : "A token key is required for this call.",
        "operationId" : "getHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceHealth"
            }
          }
        }
      }
    },
    "/devices/{imei}/mdm_response" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "retrieve MDM command response",
        "description" : "A token key is required for this call.",
        "operationId" : "getMdmResponse",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "description" : "Device Imei",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "msgId",
          "in" : "query",
          "description" : "message id of mdm request",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "delete",
          "in" : "query",
          "description" : "flag to delete the mdm response",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{id}/services" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Retrieve enabled services for a device",
        "description" : "A token key is required for this call.",
        "operationId" : "getServices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/devices" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Find a list of devices",
        "description" : "A token key is required for this call. All devices in the company hierarchy (down direction only) are included. Response is enriched to include device stats, device model and type when applicable.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Only devices with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports: stats,services,location",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "description" : "Pruning strategy",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Add a new device",
        "description" : "A token key is required for this call.",
        "operationId" : "insertDevice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      }
    },
    "/devices/{deviceId}/meters" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Retrieve the configured meters for a device",
        "description" : "A token key is required for this call.",
        "operationId" : "getMeters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VehicleMeter"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Process a device meter event",
        "description" : "A token key is required for this call.",
        "operationId" : "updateMeters",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{imei}" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Look up device by ID or IMEI",
        "description" : "A token key is required for this call.",
        "operationId" : "getDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports vehicles, devicestats, runsheets, services, location",
          "required" : false,
          "type" : "string",
          "default" : "devicestats"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      }
    },
    "/devices/{id}/fleets" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Get associated fleets for device",
        "description" : "A token key is required for this call.",
        "operationId" : "getFleets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "devices" ],
        "summary" : "Associate device to fleets",
        "description" : "A token key is required for this call.",
        "operationId" : "associateFleets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/stats" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Retrieve a list of device stats updated",
        "description" : "A token key is required for this call.",
        "operationId" : "deviceStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: users, runsheets, image_url",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "last_updated",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss. default to year 2010",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_type_codes",
          "in" : "query",
          "description" : "Which device types to filter on",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gps",
          "in" : "query",
          "description" : "Special usecase: when set to true will include gps but heavily pruned",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Extract for a single or multiple device ID's (internal ID's only)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceStats"
              }
            }
          }
        }
      }
    },
    "/devices/{id}" : {
      "put" : {
        "tags" : [ "devices" ],
        "summary" : "Update a device",
        "description" : "A token key is required for this call.",
        "operationId" : "updateDevice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "copy_vehicle_fleets",
          "in" : "query",
          "description" : "Copy vehicle's fleets to device when vehicle is specified",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "devices" ],
        "summary" : "Disable a device",
        "description" : "A token key is required for this call.",
        "operationId" : "disableDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{imei}/snapshots" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "",
        "description" : "Get the latest snapshots attachments of a device in a given month. A token key is required for this call.",
        "operationId" : "getSnapshots",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "description" : "Device IMEI",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "From ISO Date Time. Default to 5 minutes ago",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "To ISO Date Time. Default to current Date Time. Optional",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "presigned",
          "in" : "query",
          "description" : "Enable presigned",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/register" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Register a new device",
        "description" : "A registration token key is mandatory in the payload JSON.",
        "operationId" : "registerDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "defer_reg",
          "in" : "query",
          "description" : "When true, will not set registeredAt",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      }
    },
    "/devices/register/{imei}/complete" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Mark the registration completed by timestamping in registered_at",
        "description" : "A token key is required for this call.",
        "operationId" : "markRegistrationCompleted",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      }
    },
    "/devices/proximity" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Return all entry/exit events for given devices inside given geofence. Sample body : '{\"deviceIds\":\"13529\",\n\"from\":\"2020-03-25T00:00:00\",\n\"to\":\"2020-03-25T23:59:59\",\n\"points\":[\n{\"lat\":-37.7795342481134,\"lng\":145.12396502512274},\n{\"lat\":-37.76515112209694,\"lng\":145.13582897256128},\n{\"lat\":-37.75361546206268,\"lng\":145.13668727944605},\n{\"lat\":-37.7359692085905,\"lng\":145.13951683184132},\n{\"lat\":-37.72972414196204,\"lng\":145.1491298689507},\n{\"lat\":-37.707454835665274,\"lng\":145.1549663557671},\n{\"lat\":-37.69414437223084,\"lng\":145.16732597490773},\n{\"lat\":-37.691971008396926,\"lng\":145.13162040850148},\n]\n}'",
        "description" : "A token key is required for this call.",
        "operationId" : "geofenceProximity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/devices/merge" : {
      "post" : {
        "tags" : [ "devices" ],
        "operationId" : "mergeDevice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "headers" : { }
          }
        }
      }
    },
    "/devices/{id}/config" : {
      "get" : {
        "tags" : [ "devices" ],
        "operationId" : "getDeviceConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "service_code",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/devices/{id}/restore" : {
      "put" : {
        "tags" : [ "devices" ],
        "summary" : "Restore a device",
        "description" : "A token key is required for this call.",
        "operationId" : "restoreDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/import" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Import a list of devices",
        "description" : "A token key is required for this call.",
        "operationId" : "importDevices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          }
        }
      }
    },
    "/devices/{id}/pr" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "getPosRec",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss. default to 6 hours",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to datetime, yyyy-MM-ddTHH:mm:ss, default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of records, default to 100",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Gps"
              }
            }
          }
        }
      }
    },
    "/devices/{id}/replace" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Replace existing device with new device",
        "description" : "A token key is required for this call. The agreements for the old device will be removed",
        "operationId" : "replaceDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "description" : "Force replacement even when the new device has existing agreements, only applicable if both devices are in the same company",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of replacement, either REPLACE (Default) or RENEW",
          "required" : false,
          "type" : "string",
          "default" : "REPLACE"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/copyAgreements" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "*Internal* Copy agreements from one device to another",
        "description" : "A token key is required for this call.",
        "operationId" : "copyAgreements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "From/Old device id or imei",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "To/New device id or imei",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceAgreement"
              }
            }
          },
          "417" : {
            "description" : "Devices in different companies"
          },
          "416" : {
            "description" : "Device not found"
          },
          "412" : {
            "description" : "No agreements found in 'from' device"
          }
        }
      }
    },
    "/devices/{id}/mdm/helicopter" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Turn on helicopter follow mode",
        "description" : "A token key is required for this call.",
        "operationId" : "mdmHelicopter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{id}/mdm/calibrate" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Send a calibration request to device",
        "description" : "A token key is required for this call",
        "operationId" : "calibrate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/types" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "getDeviceTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceType"
              }
            }
          }
        }
      }
    },
    "/devices/models" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "getDeviceModels",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceModel"
              }
            }
          }
        }
      }
    },
    "/devices/{id}/unregister" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Unregister existing device",
        "description" : "A token key is required for this call. The agreements for the old device will not be removed",
        "operationId" : "unregisterDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{id}/calibrate/rollover" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Send a calibration request to device",
        "description" : "A token key is required for this call",
        "operationId" : "calibrateRollover",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{imei}/gpio/output" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "Set GPIO output state to the device",
        "description" : "A token key is required for this call.",
        "operationId" : "gpioOutput",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "immediate",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{id}/gpio" : {
      "get" : {
        "tags" : [ "devices" ],
        "summary" : "Find list of gpio inputs and outputs by device Id",
        "description" : "A token key is required for this call.",
        "operationId" : "getGpio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Gpio"
            }
          }
        }
      }
    },
    "/devices/events/camera" : {
      "post" : {
        "tags" : [ "devices" ],
        "summary" : "",
        "description" : "Get the camera events of given devices' id. A token key is required for this call.",
        "operationId" : "getCameraEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Start date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End date",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devicetypes" : {
      "get" : {
        "tags" : [ "devicetypes" ],
        "summary" : "List device types",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceType"
              }
            }
          }
        }
      }
    },
    "/devicetypes/{id}" : {
      "get" : {
        "tags" : [ "devicetypes" ],
        "summary" : "Look up device type by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceType"
            }
          }
        }
      }
    },
    "/documents/config" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Returns Easydocs configuration and current usage stats",
        "description" : "A token key is required for this call.",
        "operationId" : "getConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/documents/{id}" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Get document with details by id",
        "description" : "A token key is required for this call.",
        "operationId" : "getDocument",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: folders, associations, devices",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "documents" ],
        "summary" : "Delete documents by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteDocument",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/documents/upload" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Upload and create a new document",
        "description" : "A token key is required for this call.",
        "operationId" : "uploadDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "uploadParams",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UploadResponse"
            }
          }
        }
      }
    },
    "/documents/{id}/download_url" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Returns link to download a document",
        "description" : "A token key is required for this call.",
        "operationId" : "getDownloadUrl",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/documents" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Get all documents by company",
        "description" : "A token key is required for this call.",
        "operationId" : "getDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: folders, associations",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "folder",
          "in" : "query",
          "description" : "Folder id filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "documents" ],
        "summary" : "Update multiple documents",
        "description" : "A token key is required for this call.",
        "operationId" : "updateDocuments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Document"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Document"
              }
            }
          }
        }
      }
    },
    "/documents/associations" : {
      "put" : {
        "tags" : [ "documents" ],
        "summary" : "Update associations for multiple documents",
        "description" : "A token key is required for this call.",
        "operationId" : "updateAssociations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DocumentAssociation"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/documents/{id}/audit_trail" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Get document audit trail by id",
        "description" : "A token key is required for this call.",
        "operationId" : "getAuditTrail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DocumentEvent"
              }
            }
          }
        }
      }
    },
    "/vehicles/engineprofiles" : {
      "get" : {
        "tags" : [ "vehiclesengineprofiles" ],
        "summary" : "List engine profiles",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      }
    },
    "/vehicles/engineprofiles/{id}" : {
      "get" : {
        "tags" : [ "vehiclesengineprofiles" ],
        "summary" : "Look up engine profile by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company or user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EngineProfile"
            }
          }
        }
      }
    },
    "/enrolments" : {
      "get" : {
        "tags" : [ "enrolments" ],
        "summary" : "Get all enrolments by company id.",
        "description" : "An admin site user token key is required for this call.",
        "operationId" : "getAllByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "company_id",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "enrolments" ],
        "summary" : "Saves an enrolment.",
        "description" : "An admin site user token key is required for this call.",
        "operationId" : "addEnrolment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Enrolment"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/enrolments/{id}" : {
      "get" : {
        "tags" : [ "enrolments" ],
        "summary" : "Get an enrolment by id.",
        "description" : "An admin site user token key is required for this call.",
        "operationId" : "getEnrolmentById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "enrolments" ],
        "summary" : "Updates an enrolment by id.",
        "description" : "An admin site user token key is required for this call.",
        "operationId" : "updateEnrolment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Enrolment"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "enrolments" ],
        "summary" : "Cancels an enrolment.",
        "description" : "An admin site user token key is required for this call.",
        "operationId" : "cancelEnrolment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/enrolments/schemes" : {
      "get" : {
        "tags" : [ "enrolments" ],
        "summary" : "Returns the schemes used for enrolments.",
        "description" : "",
        "operationId" : "getSchemes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/fleets/{id}" : {
      "get" : {
        "tags" : [ "fleets" ],
        "summary" : "Look up fleet by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: vehicles, devices, geofences, devicestats, runsheets",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_types",
          "in" : "query",
          "description" : "Type of devices to be included",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Fleet"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "fleets" ],
        "summary" : "Update a fleet",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Fleet"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Fleet"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "fleets" ],
        "summary" : "delete a fleet",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteFleet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/fleets" : {
      "get" : {
        "tags" : [ "fleets" ],
        "summary" : "Lists fleets or look up by vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicle_id",
          "in" : "query",
          "description" : "Vehicle Id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_types",
          "in" : "query",
          "description" : "Type of devices to be included",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Mode of query: NGM (include all device types)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierachy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only fleets with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "fleets" ],
        "summary" : "Add a new fleet",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Fleet"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Fleet"
            }
          }
        }
      }
    },
    "/fleets/merge" : {
      "post" : {
        "tags" : [ "fleets" ],
        "operationId" : "merge",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Fleet"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/fleets/update/{id}" : {
      "put" : {
        "tags" : [ "fleets" ],
        "summary" : "Update a fleet with carrier",
        "description" : "A token key is required for this call.",
        "operationId" : "update2",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Fleet"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Fleet"
            }
          }
        }
      }
    },
    "/fleets/insert" : {
      "post" : {
        "tags" : [ "fleets" ],
        "summary" : "Add a new fleet with carrier",
        "description" : "A token key is required for this call.",
        "operationId" : "insert2",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Fleet"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Fleet"
            }
          }
        }
      }
    },
    "/fleets/{id}/restore" : {
      "put" : {
        "tags" : [ "fleets" ],
        "summary" : "Restore a disabled fleet",
        "description" : "A token key is required for this call.",
        "operationId" : "restoreFleet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/folders/{id}" : {
      "put" : {
        "tags" : [ "folders" ],
        "summary" : "Update a folder",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Folder"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Folder"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "folders" ],
        "summary" : "Delete folder by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/folders" : {
      "get" : {
        "tags" : [ "folders" ],
        "summary" : "Get all folders by company",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Search direction across company hierarchy, options: DOWN, NONE",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "folders" ],
        "summary" : "Add a new folder",
        "description" : "A token key is required for this call.",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Folder"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Folder"
            }
          }
        }
      }
    },
    "/forms/{id}" : {
      "get" : {
        "tags" : [ "forms" ],
        "summary" : "Get a form",
        "description" : "A token key is required for this call.",
        "operationId" : "getForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "forms" ],
        "summary" : "Update a form",
        "description" : "A token key is required for this call. This operation will create a new version of the form.",
        "operationId" : "updateForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "forms" ],
        "summary" : "Delete a form",
        "description" : "A token key is required for this call. This operation will disable the form.",
        "operationId" : "deleteForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/forms" : {
      "get" : {
        "tags" : [ "forms" ],
        "summary" : "Get a list of forms",
        "description" : "A token key is required for this call.",
        "operationId" : "getFormList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: events",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort result by: id, name, created_at, updated_at. Default: created_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Page size, Default: All",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Default: 1",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "forms" ],
        "summary" : "Create a form",
        "description" : "A token key is required for this call.",
        "operationId" : "createForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/forms/manifest" : {
      "post" : {
        "tags" : [ "forms" ],
        "summary" : "AMQP | Sent a manifest request",
        "description" : "A token key is required for this call.",
        "operationId" : "processManifest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Form"
            }
          }
        }
      }
    },
    "/geofences" : {
      "get" : {
        "tags" : [ "geofences" ],
        "summary" : "Get a list of geofences by company optionally restricted by types",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGeofences",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "types",
          "in" : "query",
          "description" : "Types of geofence to be included, options: ALL (default, excludes types with features containing SYSTEM and Managed Geofence), USER, TRAFFIC, LOAD, JOB, ROUTE, <Managed Geofence Type>",
          "required" : false,
          "type" : "string",
          "default" : "ALL"
        }, {
          "name" : "fleetId",
          "in" : "query",
          "description" : "Filter by fleet",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: fleets and location",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "excludeShape",
          "in" : "query",
          "description" : "When true we will exclude shape detail which will significantly slow down performance, default to false",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Geofence"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "geofences" ],
        "summary" : "Create a geofence",
        "description" : "A user token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Geofence"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Geofence"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "geofences" ],
        "summary" : "Update a geofence",
        "description" : "A user token key is required for this call.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Geofence"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Geofence"
            }
          }
        }
      }
    },
    "/geofences/{id}" : {
      "get" : {
        "tags" : [ "geofences" ],
        "summary" : "Get a geofence by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getGeofence",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: fleets and location",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Managed Geofence Type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Geofence"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "geofences" ],
        "summary" : "Delete a geofence",
        "description" : "A user token key is required for this call.",
        "operationId" : "deleteGeofence",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/geofences/{id}/audit" : {
      "get" : {
        "tags" : [ "geofences" ],
        "summary" : "Get the audit of a geofence",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAuditHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Audit"
              }
            }
          }
        }
      }
    },
    "/geofences/merge" : {
      "post" : {
        "tags" : [ "geofences" ],
        "operationId" : "mergeGeofence",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Geofence"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/guaranteed_delivery" : {
      "get" : {
        "tags" : [ "Guaranteed Delivery" ],
        "summary" : "Request guaranteed delivery, only in-case we need to trigger on demand. Attempt delivery already triggered on REG",
        "description" : "A token key is required for this call.",
        "operationId" : "deliver",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "routing_key",
          "in" : "query",
          "description" : "Routing Key",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/guaranteed_delivery/ack" : {
      "post" : {
        "tags" : [ "Guaranteed Delivery" ],
        "summary" : "Ack guaranteed delivery is successful",
        "description" : "A token key is required for this call.",
        "operationId" : "ack",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inspections/{id}/{type}" : {
      "put" : {
        "tags" : [ "inspections" ],
        "summary" : "update notes or status",
        "description" : "A user token key is required for this call.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Inspection"
            }
          }
        }
      }
    },
    "/inspections/{eventId}" : {
      "get" : {
        "tags" : [ "inspections" ],
        "summary" : "Get events by Id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPretripEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "vehicle id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Inspection"
            }
          }
        }
      }
    },
    "/inspections" : {
      "get" : {
        "tags" : [ "inspections" ],
        "summary" : "Get all inspections",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAllInspections",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "sort result by: id, time_at, created_at, updated_at. default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "sort direction: asc, desc. default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Inspection"
              }
            }
          }
        }
      }
    },
    "/installkits/{id}" : {
      "get" : {
        "tags" : [ "installkits" ],
        "summary" : "Get a install kit by ID",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InstallKit"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "installkits" ],
        "summary" : "Update existing install kit",
        "description" : "An API key is required for performing this action",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InstallKit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InstallKit"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "installkits" ],
        "summary" : "Delete existing install kit",
        "description" : "An API key is required for performing this action",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/installkits" : {
      "get" : {
        "tags" : [ "installkits" ],
        "summary" : "Get a list of all install kits",
        "description" : "An API key is required for performing this action",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InstallKit"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "installkits" ],
        "summary" : "Create a new install kit",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InstallKit"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InstallKit"
            }
          }
        }
      }
    },
    "/iotrips/tripstate/default" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Returns the default trip state for this device",
        "description" : "A user token key is required for this call.",
        "operationId" : "getDefaultTripState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "iotrips" ],
        "summary" : "Set the default trip state for this company",
        "description" : "A user token key is required for this call.",
        "operationId" : "setDefaultTripState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "defaultTripState",
          "in" : "query",
          "description" : "Sets the default trip-state for this company. Must match one of the defined trip-state values for this company.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/iotrips/tripstate/region" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Gets the default trip states for the region",
        "description" : "A user token key is required for this call.",
        "operationId" : "getRegionDefaultTripStates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/iotrips" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Get a list if IO-based trips for the company (user-key)",
        "description" : "A user token is required for this call.",
        "operationId" : "getTripsByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "USER key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IoTrip"
              }
            }
          }
        }
      }
    },
    "/iotrips/{deviceId}" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Get a list of IO-based trips for the given device",
        "description" : "A user-api token key is required for this call.",
        "operationId" : "getTripsByDeviceId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "Device imei-id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: desc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IoTrip"
              }
            }
          }
        }
      }
    },
    "/iotrips/user/{userId}" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Get a list of IO-based trips for the given User",
        "description" : "A user-api token key is required for this call.",
        "operationId" : "getTripsByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: desc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IoTrip"
              }
            }
          }
        }
      }
    },
    "/iotrips/tripat" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Get the trip the device is allocated to at the specified time",
        "description" : "A user token key is required for this call.",
        "operationId" : "identifyIOTripAt",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "query",
          "description" : "Device id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "at",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          }
        }
      }
    },
    "/iotrips/purpose" : {
      "post" : {
        "tags" : [ "iotrips" ],
        "summary" : "Sets the trip state, of a trip based on the timestamp. If the trip does not exist, creates it as a pre-trip",
        "description" : "A user token key is required for this call.",
        "operationId" : "setTripPurpose",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "query",
          "description" : "Device id of device with a trip to be updated with a new trip-state",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "description" : "Vehicle id of vehicle with a trip to be updated with a new trip-state",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "timeAt",
          "in" : "query",
          "description" : "Time when the trip-state changed. Will be matched against the trip open at this time",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tripState",
          "in" : "query",
          "description" : "Trip state e.g. Private. Must be valid trip-state from this company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "iotrips" ],
        "summary" : "Updates the trip state of a trip based on its Id",
        "description" : "A user token key is required for this call.",
        "operationId" : "updateTripPurpose",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tripId",
          "in" : "query",
          "description" : "Database id of trip to be updated with new purpose",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tripState",
          "in" : "query",
          "description" : "Sets the trip purpose e.g. Private or Business",
          "required" : false,
          "type" : "string",
          "default" : "Non-Business"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          }
        }
      }
    },
    "/iotrips/tripstate" : {
      "get" : {
        "tags" : [ "iotrips" ],
        "summary" : "Gets the trip state info for a Company",
        "description" : "A user token key is required for this call.",
        "operationId" : "getTripStateConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "iotrips" ],
        "summary" : "Adds a new trip state to the possible trip states",
        "description" : "A user token key is required for this call.",
        "operationId" : "addTripState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "newTripState",
          "in" : "query",
          "description" : "Trip-state string to be added",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "iotrips" ],
        "summary" : "Remove the trip state from this companies trip states",
        "description" : "A user token key is required for this call.",
        "operationId" : "deleteTripState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deleteTripState",
          "in" : "query",
          "description" : "Trip-state string to be deleted",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/journeys/{id}" : {
      "get" : {
        "tags" : [ "journeys" ],
        "summary" : "Retrieve list of journeys",
        "description" : "A token key is required for this call.",
        "operationId" : "getJourney",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports: stop, leg, location, geofence, address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "journeys" ],
        "summary" : "Update a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Trip"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports: stop, location, geofence, address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "journeys" ],
        "summary" : "Delete journey by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteJourney",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/journeys" : {
      "get" : {
        "tags" : [ "journeys" ],
        "summary" : "Retrieve list of journeys",
        "description" : "A token key is required for this call.",
        "operationId" : "getJourneys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "types",
          "in" : "query",
          "description" : "Comma separated type of journeys to be included: JOURNEY_PLANNED, GEO_PLANNED, ROUTE_PLANNED",
          "required" : false,
          "type" : "string",
          "default" : "JOURNEY_PLANNED,GEO_PLANNED,ROUTE_PLANNED"
        }, {
          "name" : "fleet_id",
          "in" : "query",
          "description" : "Only journeys in this fleet, optional",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports: stop, leg, location, geofence, address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only journeys with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Search direction across company hierarchy, options: UP, DOWN, BOTH",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "journeys" ],
        "summary" : "Add a new journey",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Trip"
          }
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, supports: stop, location, geofence, address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          }
        }
      }
    },
    "/journeys/{id}/restore" : {
      "put" : {
        "tags" : [ "journeys" ],
        "summary" : "Restore journey by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "restoreJourney",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/locationtypes" : {
      "get" : {
        "tags" : [ "locationtypes" ],
        "summary" : "Look up locations types",
        "description" : "A token key is required for this call.",
        "operationId" : "getLocationTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LocationType"
              }
            }
          }
        }
      }
    },
    "/locations/{id}" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Look up a location by id",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "locations" ],
        "summary" : "Mark a location as disabled",
        "description" : "A token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/locations" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Look up locations optionally restricted to a list of types",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type[]",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierachy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only locations with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "locations" ],
        "summary" : "Create a new or update existing location",
        "description" : "A token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      }
    },
    "/locations/{id}/restore" : {
      "put" : {
        "tags" : [ "locations" ],
        "summary" : "Restore a disabled location",
        "description" : "A token key is required for this call.",
        "operationId" : "restore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/locations/{id}/contacts" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Get a list of contacts for the specified location",
        "description" : "",
        "operationId" : "getLocationContacts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "locations" ],
        "summary" : "Create a location contact",
        "description" : "",
        "operationId" : "createLocationContact",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Runsheet"
            }
          }
        }
      }
    },
    "/locations/{id}/contacts/{contactId}" : {
      "put" : {
        "tags" : [ "locations" ],
        "summary" : "Update a location contact",
        "description" : "",
        "operationId" : "updateLocationContact",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Runsheet"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "locations" ],
        "summary" : "Delete a location contact",
        "description" : "",
        "operationId" : "deleteLocationContact",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Runsheet"
            }
          }
        }
      }
    },
    "/locations/{id}/contacts/{contactId}/restore" : {
      "put" : {
        "tags" : [ "locations" ],
        "summary" : "Restore a deleted location contact",
        "description" : "",
        "operationId" : "restoreLocationContact",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Runsheet"
            }
          }
        }
      }
    },
    "/locations/{id}/users" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Get the users assigned to a location",
        "description" : "",
        "operationId" : "getUserLocations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserLocation"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "locations" ],
        "summary" : "Assign users to a location",
        "description" : "",
        "operationId" : "createUserLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserLocation"
            }
          }
        }
      }
    },
    "/locations/{id}/audit" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Get the audit history of a location",
        "description" : "",
        "operationId" : "getAuditHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserLocation"
            }
          }
        }
      }
    },
    "/locations/{id}/geofences" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Get geofences associated with a location",
        "description" : "",
        "operationId" : "getGeofenceAssociations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Geofence"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "locations" ],
        "summary" : "Assign a location to a geofence",
        "description" : "",
        "operationId" : "assignGeofences",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/locations/what3words" : {
      "get" : {
        "tags" : [ "locations" ],
        "summary" : "Use what3words to lookup a location",
        "description" : "A token key is required for this call.",
        "operationId" : "getWhat3WordsLocation",
        "produces" : [ "text/json" ],
        "parameters" : [ {
          "name" : "words",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/messages/{id}" : {
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete a message sent to all recipients",
        "description" : "A token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the message",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/messages" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get messages by company, last update, time range",
        "description" : "A token key is required for this call.",
        "operationId" : "getMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "last_updated",
          "in" : "query",
          "description" : "last updated datetime, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: MessageEvents",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "message_types",
          "in" : "query",
          "description" : "Type of devices to be included. Supported: MSG-RECV, MSG-REPLY, MSG-READ, MSG-ACK, MSG-NEW",
          "required" : false,
          "type" : "string",
          "default" : "MSG-NEW"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from datetime, yyyy-MM-ddTHH:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to datetime, yyyy-MM-ddTHH:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Message"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "operationId" : "inboundMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageEvent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MessageAck"
            },
            "headers" : { }
          }
        }
      }
    },
    "/messages/{id}/read" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "markAsRead",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Message"
            }
          }
        }
      }
    },
    "/messages/{id}/{recipienttype}/{recipientid}" : {
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete a message sent to a vehicle, driver or device",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteByRecipient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the message",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "recipienttype",
          "in" : "path",
          "description" : "Supported: VEHICLE, DRIVER or DEVICE",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "recipientid",
          "in" : "path",
          "description" : "id of the recipient",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/messages/unreadMessagesCount" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get unread messages count for the specified company, up to last 6 months",
        "description" : "A token key is required for this call.",
        "operationId" : "getUnreadCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "/messages/routeTo" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Send route to message to device. Sample body : {\n\t\"deviceImei\": \"123333334\",\n\t\"routeToAddress\": \"990 Toorak Road, Camberwell VIC 3124, Melbourne, Australia\",\n\t\"message\": \"optional message\",\n\t\"GPS\": {\n\t\t\"Lat\": -37.84677758200359,\n\t\t\"Lng\": 145.06399239585267,\n\t}\n}",
        "description" : "A token key is required for this call.",
        "operationId" : "routeTo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MessageAck"
            }
          }
        }
      }
    },
    "/messages/app" : {
      "post" : {
        "tags" : [ "messages" ],
        "operationId" : "inboundNextGenMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Message"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageAck"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/messages/{recipient_type}/{id}" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get messages by vehicle/driver/device, date range and event types",
        "description" : "A token key is required for this call.",
        "operationId" : "getMessagesByRecipientType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recipient_type",
          "in" : "path",
          "description" : "Recipient type. Supported : VEHICLE, DRIVER, DEVICE",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the vehicle, driver or device",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: MessageEvents",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "message_types",
          "in" : "query",
          "description" : "Type of devices to be included. Supported: MSG-RECV, MSG-REPLY, MSG-READ, MSG-ACK, MSG-NEW",
          "required" : false,
          "type" : "string",
          "default" : "MSG-NEW"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from datetime, yyyy-MM-ddTHH:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to datetime, yyyy-MM-ddTHH:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Message"
              }
            }
          }
        }
      }
    },
    "/messages/template/{id}" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message template by id",
        "description" : "A token key is required for this call.",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the message template",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MessageTemplate"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "Delete a message template",
        "description" : "A token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/messages/template/company/{id}" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message template by companyId",
        "description" : "A token key is required for this call.",
        "operationId" : "getByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the company",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageTemplate"
              }
            }
          }
        }
      }
    },
    "/messages/template/user" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get message template by userId",
        "description" : "A token key is required for this call.",
        "operationId" : "getByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MessageTemplate"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Create a user level message template",
        "description" : "A token key is required for this call.",
        "operationId" : "createUserLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageTemplate"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Create a user level message template",
        "description" : "A token key is required for this call.",
        "operationId" : "updateUserLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageTemplate"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/messages/template/company" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Create a company level message template",
        "description" : "A token key is required for this call.",
        "operationId" : "createCompanyLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageTemplate"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "messages" ],
        "summary" : "Update a company level message template",
        "description" : "A token key is required for this call.",
        "operationId" : "updateCompanyLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageTemplate"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/meterthresholds/update" : {
      "put" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Update a meter threshold",
        "description" : "A user token key is required for this call.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MeterThreshold"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MeterThreshold"
            }
          }
        }
      }
    },
    "/meterthresholds/{id}" : {
      "get" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Get a meter threshold by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getMeterThreshold",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MeterThreshold"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Delete a meter threshold",
        "description" : "A user token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/meterthresholds/create" : {
      "post" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Create a meter threshold",
        "description" : "A user token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MeterThreshold"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MeterThreshold"
            }
          }
        }
      }
    },
    "/meterthresholds" : {
      "get" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "",
        "description" : "A user or company token key is required for this call.",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MeterThreshold"
              }
            }
          }
        }
      }
    },
    "/meterthresholds/{id}/audit" : {
      "get" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Get the audit of a meter threshold",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAuditHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Audit"
              }
            }
          }
        }
      }
    },
    "/meterthresholds/sources" : {
      "get" : {
        "tags" : [ "meterthresholds" ],
        "summary" : "Get the list of a meter threshold sources for company vehicles and for company devices",
        "description" : "A user token key is required for this call.",
        "operationId" : "meterThresholdSources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "all_companies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/netradyne/sso" : {
      "get" : {
        "tags" : [ "netradyne" ],
        "summary" : "Retrieve an SSO token for accessing Netradyne portal",
        "description" : "A token key is required for this call.",
        "operationId" : "getNetradyneTokenUrl",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alertId",
          "in" : "query",
          "description" : "Sort result, Default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "notifications" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getNotifications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Notification"
              }
            }
          }
        }
      }
    },
    "/notifications/{id}/comment" : {
      "post" : {
        "tags" : [ "notifications" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "comment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "IDS",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/notifications/dismiss" : {
      "post" : {
        "tags" : [ "notifications" ],
        "summary" : "Dismiss all notifications for given user",
        "description" : "A user token key is required for this call.",
        "operationId" : "dismissByUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/notifications/{id}/dismiss" : {
      "post" : {
        "tags" : [ "notifications" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "dismiss",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "IDS",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/notifications/{id}" : {
      "get" : {
        "tags" : [ "notifications" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getNotification",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Notification ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "IDS",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/pretripchecklists/dvirtemplate" : {
      "get" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Get dvir inspection template",
        "description" : "A user token key is required for this call.",
        "operationId" : "getDvirInspectionTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/pretripchecklists" : {
      "get" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Get a list of pretrip checklists",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAllPretrips",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort result by: id, name, created_at, updated_at. Default: created_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Page size, Default: All",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Default: 1",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PreTrip"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Create a pretrip checklist",
        "description" : "A user token key is required for this call.",
        "operationId" : "createPretripChecklist",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PreTrip"
            }
          }
        }
      }
    },
    "/pretripchecklists/{id}" : {
      "get" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Get a pretripchecklist",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPretrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PreTrip"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Update a pretrip",
        "description" : "A user token key is required for this call. This operation will create a new version of the pretrip.",
        "operationId" : "updatePretrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PreTrip"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "pretripchecklists" ],
        "summary" : "Delete a pretripchecklist",
        "description" : "A user token key is required for this call. This operation will delete the pretrip.",
        "operationId" : "deletePretrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/regions" : {
      "get" : {
        "tags" : [ "regions" ],
        "summary" : "Retrieve a list of regions",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Region"
              }
            }
          }
        }
      }
    },
    "/register" : {
      "get" : {
        "tags" : [ "register" ],
        "summary" : "List registration codes",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type",
          "required" : false,
          "type" : "string",
          "default" : "enabled",
          "enum" : [ "all", "enabled", "expired" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RegistrationCode"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "register" ],
        "summary" : "Add a new registration code",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegistrationCode"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegistrationCode"
            }
          }
        }
      }
    },
    "/register/{id}" : {
      "get" : {
        "tags" : [ "register" ],
        "summary" : "Look up registration code by ID or code",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegistrationCode"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "register" ],
        "summary" : "Disable registration code by ID or code",
        "description" : "A token key is required for this call.",
        "operationId" : "disableCode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/register/{id}/qr" : {
      "get" : {
        "tags" : [ "register" ],
        "summary" : "Generate registration code as QR image",
        "description" : "A token key is required for this call.",
        "operationId" : "qrCode",
        "produces" : [ "image/png" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RegistrationCode"
              }
            }
          }
        }
      }
    },
    "/roles/{id}" : {
      "get" : {
        "tags" : [ "roles" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "roles" ],
        "summary" : "Update a role",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Role"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "roles" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "deleteRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/roles" : {
      "get" : {
        "tags" : [ "roles" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "order_by",
          "in" : "query",
          "description" : "sort result by: name, company_id. default: name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "sort direction: asc, desc. default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Role"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "roles" ],
        "summary" : "Add a new role",
        "description" : "A token key is required for this call.",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Role"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          }
        }
      }
    },
    "/sapitems/{id}" : {
      "get" : {
        "tags" : [ "sapitems" ],
        "summary" : "Get a Sap Item by ID",
        "description" : "",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SapItem"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "sapitems" ],
        "summary" : "Update existing sap item",
        "description" : "An API key is required for performing this action",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SapItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SapItem"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "sapitems" ],
        "summary" : "Delete existing sap item",
        "description" : "An API key is required for performing this action",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/sapitems" : {
      "get" : {
        "tags" : [ "sapitems" ],
        "summary" : "Get a list of all sap items filtered by name , sap code or type",
        "description" : "An API key is required for performing this action",
        "operationId" : "listAllSapItems",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "options: childItem",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sap_code",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "direction",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SapItem"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "sapitems" ],
        "summary" : "Create a new sap item",
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SapItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SapItem"
            }
          }
        }
      }
    },
    "/schedules/{type}/complete/{id}" : {
      "put" : {
        "tags" : [ "schedules" ],
        "summary" : "Complete a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "complete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}/{id}" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get a schedule by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, comma separated options: company, managetype, user, vehicle, driver, events",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "schedules" ],
        "summary" : "Update a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "schedules" ],
        "summary" : "Delete a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get a list of schedules filtered by search criteria",
        "description" : "A user token key is required for this call.",
        "operationId" : "getList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in the response, comma separated options: company, managetype, user, vehicle, driver",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fleet_id",
          "in" : "query",
          "description" : "Filter by fleet",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vehicle_id",
          "in" : "query",
          "description" : "Filter by vehicle",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "driver_id",
          "in" : "query",
          "description" : "Filter by driver",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "manage_type_id",
          "in" : "query",
          "description" : "Filter by manage type",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter by status (comma separated), options: PENDING, DUE_NOW, OVERDUE, COMPLETED, CANCELLED, DELETED",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Schedule"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Create a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}/cancel/{id}" : {
      "put" : {
        "tags" : [ "schedules" ],
        "summary" : "Cancel a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "cancel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}/restore/{id}" : {
      "put" : {
        "tags" : [ "schedules" ],
        "summary" : "Restore a types",
        "description" : "A user token key is required for this call.",
        "operationId" : "restore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}/reschedule" : {
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Reschedule an existing schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "reschedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/schedules/{type}/audit/{id}" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get audit for a schedule",
        "description" : "A user token key is required for this call.",
        "operationId" : "getAudit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Type of schedule, options: vehiclemaintenance, drivermanagement",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Audit"
              }
            }
          }
        }
      }
    },
    "/smartjobs/codes/{id}" : {
      "get" : {
        "tags" : [ "smartjobs" ],
        "summary" : "Get SmartJobs Code by Id",
        "description" : "A token key is required for this call.",
        "operationId" : "getCodesById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "smartjobs" ],
        "summary" : "Update SmartJobs Codes",
        "description" : "A token key is required for this call.",
        "operationId" : "updateCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "smartjobs" ],
        "summary" : "Delete SmartJobs Code by Id",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/smartjobs/codes" : {
      "get" : {
        "tags" : [ "smartjobs" ],
        "summary" : "Get SmartJobs Codes",
        "description" : "A token key is required for this call.",
        "operationId" : "getCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "smartjobs" ],
        "summary" : "Create SmartJobs Codes",
        "description" : "A token key is required for this call.",
        "operationId" : "createCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/timezones" : {
      "get" : {
        "tags" : [ "timezones" ],
        "summary" : "Retrieve a list of timezones",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/trips/{id}" : {
      "get" : {
        "tags" : [ "trips" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getTrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: events",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "Comma separated type of events to be included. supported: IOR,VPM_IT,SPEED,GEOFENCE, VPM_HC,VPM_IM,VPM_HB,VPM_OR,VPM_EA,VPM_EOP,VPM_ECT,VPM_EOT,ALARM,PRETRIP,FORM,ALERT,PTO,CAMERA,DRIVER,MASS",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EngineMgtSummaryEvent"
            }
          }
        }
      }
    },
    "/trips" : {
      "get" : {
        "tags" : [ "trips" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getTrips",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "query",
          "description" : "Device id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vehicleId",
          "in" : "query",
          "description" : "Vehicle id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: events, meters",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "Comma separated type of events to be included. supported: IOR,VPM_IT,SPEED,GEOFENCE,VPM_HC,VPM_IM,VPM_HB,VPM_OR,VPM_EA,VPM_EOP,VPM_ECT,VPM_EOT,ALARM,PRETRIP,FORM,ALERT,PTO,CAMERA,DRIVER,MASS,FATIGUE,GPIO",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Sort result by: time_at , user_id, ignition_on, ignition_off, start_location, end_location. Default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction: asc, desc. Default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EngineMgtSummaryEvent"
              }
            }
          }
        }
      }
    },
    "/types/{type}" : {
      "get" : {
        "tags" : [ "types" ],
        "summary" : "Get a list of managed types by company",
        "description" : "A user token key is required for this call.",
        "operationId" : "getList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Options: vehicletypes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only vehicles with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ManageType"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "types" ],
        "summary" : "Create a managed type",
        "description" : "A user token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManageType"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "types" ],
        "summary" : "Update a managed type",
        "description" : "A user token key is required for this call.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManageType"
            }
          }
        }
      }
    },
    "/types/{type}/{id}" : {
      "get" : {
        "tags" : [ "types" ],
        "summary" : "Get a managed type by id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, currently supports: vehicletypes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManageType"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "types" ],
        "summary" : "Delete a managed type",
        "description" : "A user token key is required for this call.",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/types/{type}/{id}/restore" : {
      "put" : {
        "tags" : [ "types" ],
        "summary" : "Restore a managed type",
        "description" : "A user token key is required for this call.",
        "operationId" : "restore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users2" : {
      "get" : {
        "tags" : [ "users2" ],
        "summary" : "Find a list of users",
        "description" : "A token key is required for this call. Response is enriched to include Sentinel ruleset when applicable.",
        "operationId" : "findByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Only users with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partialName",
          "in" : "query",
          "description" : "Partial name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partialExt",
          "in" : "query",
          "description" : "Partial external id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Limit the number of users matching 'partialName'",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "users" ],
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: audit, image_url, user_session, current_vehicles",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "headers" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update a user",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "fleetPermissions",
          "in" : "query",
          "description" : "options: ALL, NONE, SELECTED",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchPermissions",
          "in" : "query",
          "description" : "options: ALL, NONE, SELECTED",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "users" ],
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find a list of users",
        "description" : "A token key is required for this call. Response is enriched to include Sentinel ruleset when applicable.",
        "operationId" : "findByCompanyId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: audit, locations, fleets, associations, user_session, document",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only users with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partialName",
          "in" : "query",
          "description" : "Partial name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partialExt",
          "in" : "query",
          "description" : "Partial external id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Limit the number of users matching 'partialName'",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Add a new user",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "fleetPermissions",
          "in" : "query",
          "description" : "options: ALL, NONE, SELECTED",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchPermissions",
          "in" : "query",
          "description" : "options: ALL, NONE, SELECTED",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}/associations" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Retrieve a user's external associations (external ID's)",
        "description" : "A token key is required for this call.",
        "operationId" : "getAssociations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "query",
          "description" : "Return external ID's mapped to this user in the specified domain",
          "required" : false,
          "type" : "string",
          "default" : "APIEX",
          "enum" : [ "API", "EWD", "DEMO" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExternalAssociation"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Add an external associations to a user's account",
        "description" : "A token key is required for this call.",
        "operationId" : "addAssociation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalAssociation"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExternalAssociation"
            }
          }
        }
      }
    },
    "/users/{id}/force_logoff" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Force user logOff from vehicle(s)",
        "description" : "A token key is required for this call.",
        "operationId" : "forceLogoff",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON Object with vehicleIds array",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/image" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Upload user profile image",
        "description" : "A token key is required for this call.",
        "operationId" : "uploadProfileImage",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "User id to link image with",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UploadResponse"
            }
          }
        }
      }
    },
    "/users/import" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Import a list of users",
        "description" : "A token key is required for this call.",
        "operationId" : "importUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of users in JSON Array",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fleetPermissions",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchPermissions",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/users/merge" : {
      "post" : {
        "tags" : [ "users" ],
        "operationId" : "mergeUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "fleetPermissions",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchPermissions",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{id}/config/{pref}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Retrieve a user's configuration preference",
        "description" : "A USER token key is required for this call.",
        "operationId" : "getUserConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pref",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Set a user's configuration preference",
        "description" : "A USER token key is required for this call.",
        "operationId" : "setUserConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pref",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "An arbitrary payload to store against the preference key",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{id}/associations/{assocId}" : {
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Delete an external associations from a user's account",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteAssociation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assocId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/password" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Change a user's password",
        "description" : "A token key is required for this call.",
        "operationId" : "changePassword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/password/reset/token" : {
      "post" : {
        "tags" : [ "users" ],
        "operationId" : "generateResetPasswordToken",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/password/reset" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Reset a user's password",
        "description" : "",
        "operationId" : "resetPassword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{id}/restore" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Restore a disabled user",
        "description" : "A token key is required for this call.",
        "operationId" : "restoreUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{userId}/rulesets/{userRulesetId}" : {
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Delete user ruleset association from a user's account",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteUserRuleset",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userRulesetId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users/{userId}/vehicles" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Look up default users by user ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findUserByType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "User Type: DEFAULT",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleUser"
            }
          }
        }
      }
    },
    "/vehiclecompatibility" : {
      "get" : {
        "tags" : [ "vehiclecompatibility" ],
        "summary" : "Get a list of compatibility details by Make, Model and Year",
        "description" : "An API key is required for performing this action",
        "operationId" : "findByMakeModelYear",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "make",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "model",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "year",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "source",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceTypeId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vin",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reg",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "license",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "any",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VehicleCompatibilityDetails"
              }
            }
          }
        }
      }
    },
    "/vehiclecompatibility/deviceTypes" : {
      "get" : {
        "tags" : [ "vehiclecompatibility" ],
        "summary" : "Get a list of device type supported",
        "description" : "",
        "operationId" : "findDeviceModels",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceType"
              }
            }
          }
        }
      }
    },
    "/vehiclecompatibility/model" : {
      "get" : {
        "tags" : [ "vehiclecompatibility" ],
        "summary" : "Get a list of Vehicle Model by VIN, Registration or License",
        "description" : "An API key is required for performing this action",
        "operationId" : "findVehicleModelByAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vin",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reg",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "license",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "any",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/VehicleModel"
              }
            }
          }
        }
      }
    },
    "/vehiclecompatibility/pids" : {
      "get" : {
        "tags" : [ "vehiclecompatibility" ],
        "summary" : "Get a list of pids supported",
        "description" : "",
        "operationId" : "findPids",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/Pid"
                }
              }
            }
          }
        }
      }
    },
    "/massmanagement/vcombinations/{id}" : {
      "get" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Look up vehicle axle combinations by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findCombinationsById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "IDS",
          "enum" : [ "ALL", "LIST", "IDS", "APP", "WEB" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Update a vehicle axle configurations",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleCombination"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Delete vehicle axle configuration by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteVehicleCombinationsById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/massmanagement/vcombinations" : {
      "get" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Look up for all vehicle axle combinations",
        "description" : "A token key is required for this call.",
        "operationId" : "findAllVehicleCombinations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "LIST", "IDS", "APP", "WEB" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Add a new vehicle axle configurations",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleCombination"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "LIST",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      }
    },
    "/massmanagement/massscheme/{id}" : {
      "get" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Look up vehicle axle combinations by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findMassSchemeById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "IDS",
          "enum" : [ "ALL", "LIST", "IDS", "APP", "WEB" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      }
    },
    "/massmanagement/massschemeconfigs" : {
      "get" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Look up for all mass schemes",
        "description" : "A token key is required for this call.",
        "operationId" : "findAllMassConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: vehicles,fleets",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "LIST", "IDS", "APP", "WEB" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Create a Mass Scheme Configuration",
        "description" : "A user token key is required for this call.",
        "operationId" : "createMassSchemeConfigFromPayload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleMassConfig"
            }
          }
        }
      }
    },
    "/massmanagement/massschemeconfigs/{id}" : {
      "get" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Look up for mass schemes by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findMassSchemeConfigsById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: vehicles,fleets",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleCombination"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Update a vehicle mass configurations",
        "description" : "A token key is required for this call.",
        "operationId" : "updateMassSchemes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: vehicles,fleets",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleMassConfig"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Delete mass configuration by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteMassSchemeConfigs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/massmanagement/vehicleconfig/{id}" : {
      "put" : {
        "tags" : [ "massmanagement" ],
        "summary" : "Update a vehicles/fleets configs configurations",
        "description" : "A token key is required for this call.",
        "operationId" : "updateVehicleConfigById",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response. Supported: fleets,vehicles",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleMassConfig"
            }
          }
        }
      }
    },
    "/vehiclemodels/{id}" : {
      "get" : {
        "tags" : [ "vehiclemodels" ],
        "summary" : "Get a Vehicle Model by ID",
        "description" : "An API key is required for performing this action",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleModel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "vehiclemodels" ],
        "summary" : "Update existing Vehicle Model",
        "description" : "An API key is required for performing this action",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "vehiclemodels" ],
        "summary" : "Delete existing Vehicle Model",
        "description" : "An API key is required for performing this action",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehiclemodels" : {
      "get" : {
        "tags" : [ "vehiclemodels" ],
        "summary" : "Get a list of supported Vehicle Models by Make, Model and Year from global list or private company list",
        "description" : "An API key is required for performing this action",
        "operationId" : "findByMakeModelYear",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "make",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "model",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "year",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "source",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VehicleModel"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "vehiclemodels" ],
        "summary" : "Create a new Vehicle Model",
        "description" : "An API key is required for performing this action",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleModel"
            }
          }
        }
      }
    },
    "/vehicles/report/utilization" : {
      "get" : {
        "tags" : [ "vehiclesreport" ],
        "summary" : "Retrieve a list of vehicle's total engine hours per day",
        "description" : "A token key is required for this call.",
        "operationId" : "GetUtilization",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "region",
          "in" : "query",
          "description" : "the region instance for which the company is in. (ex: us, au, mx, uk)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vehicle_ids",
          "in" : "query",
          "description" : "comma separated vehicle id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to datetime, yyyy-MM-ddTHH:mm:ss ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Utilization"
            }
          }
        }
      }
    },
    "/vehicles/{id}" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Look up vehicle by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, available options are: devices, services, maintenance_info, vehicle_assets, image_url",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "device_types",
          "in" : "query",
          "description" : "Type of devices to be included",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Vehicle"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "vehicles" ],
        "summary" : "Update a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Vehicle"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Vehicle"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "vehicles" ],
        "summary" : "Delete vehicle by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteVehicle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Look up vehicles",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "location_id",
          "in" : "query",
          "description" : "Vehicles assigned to this location",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vehicle_code",
          "in" : "query",
          "description" : "Vehicle types to include",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "fleet_id",
          "in" : "query",
          "description" : "Only vehicles in this fleet",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "partialName",
          "in" : "query",
          "description" : "Search vehicles by partial name and registration",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partialExt",
          "in" : "query",
          "description" : "Search vehicle by partial external ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Limit number of responses",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Search direction across company hierarchy, options: UP, DOWN, BOTH (default DOWN)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only vehicles with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "embed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "vehicles" ],
        "summary" : "Add a new vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "allow_duplicates",
          "in" : "query",
          "description" : "When false, disallow insert if either name or registration exist in the company, default to true",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Vehicle"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Vehicle"
            }
          }
        }
      }
    },
    "/vehicles/{id}/config" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Retrieve vehicle configuration",
        "description" : "A token key is required for this call.",
        "operationId" : "getConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "vehicles" ],
        "summary" : "Configure vehicle (FTC)",
        "description" : "A token key is required for this call.",
        "operationId" : "setConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/vehicles/{id}/meters" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Retrieve the configured meters for a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "getMeters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VehicleMeter"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "vehicles" ],
        "summary" : "Set the configured meter sources for a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "setMeters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/VehicleMeter"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles/{id}/rebase" : {
      "post" : {
        "tags" : [ "vehicles" ],
        "summary" : "Rebase a vehicle's meters",
        "description" : "A token key is required for this call.",
        "operationId" : "rebase",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RebaseRequest"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles/{id}/fleets" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Get associated fleets for vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "getFleets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fleet"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "vehicles" ],
        "summary" : "Associate vehicle to fleets",
        "description" : "A token key is required for this call.",
        "operationId" : "associateFleets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles/stats" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Retrieve a list of vehicle stats updated",
        "description" : "A token key is required for this call.",
        "operationId" : "vehicleStats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: vehicles, users, runsheets, meters, gps, fleets",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "last_updated",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss. default to year 2010",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Search direction across company hierarchy. options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gps",
          "in" : "query",
          "description" : "Special usecase: when set to true will include gps but heavily pruned",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Extract for a single or multiple vehicle ID's (internal ID's only)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VehicleStats"
              }
            }
          }
        }
      }
    },
    "/vehicles/{id}/users" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Look up default users by vehicle ID and user type",
        "description" : "A token key is required for this call.",
        "operationId" : "findDefaultUserByVehicleIdType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "User Type: DEFAULT",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleUser"
            }
          }
        }
      }
    },
    "/vehicles/{id}/users/{user_id}" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Look up default user by vehicle ID and user ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findDefaultDriverByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleUser"
            }
          }
        }
      }
    },
    "/vehicles/{id}/restore" : {
      "put" : {
        "tags" : [ "vehicles" ],
        "summary" : "Restore a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "restoreVehicle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles/{id}/positions" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "",
        "description" : "A token key is required for this call.",
        "operationId" : "getVehiclePositions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "device id used",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "highDefinition",
          "in" : "query",
          "description" : "Set to true if you need HD data",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss. default to 6 hours",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to datetime, yyyy-MM-ddTHH:mm:ss, default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "max number of records, default to 100",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Gps"
              }
            }
          }
        }
      }
    },
    "/vehicles/{id}/checklist" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Retrieve a list of pretrip checklist event by vehcile",
        "description" : "A token key is required for this call.",
        "operationId" : "getVehiclePreTripEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from datetime, yyyy-MM-ddTHH:mm:ss. default to 1 day",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to datetime, yyyy-MM-ddTHH:mm:ss, default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Search order asc or desc, default asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Sort result, Default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          }
        }
      }
    },
    "/vehicles/merge" : {
      "post" : {
        "tags" : [ "vehicles" ],
        "operationId" : "mergeVehicle",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Vehicle"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicles/import" : {
      "post" : {
        "tags" : [ "vehicles" ],
        "summary" : "Import a list of vehicles",
        "description" : "A token key is required for this call.",
        "operationId" : "importVehicles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Vehicle"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      }
    },
    "/vehicles/image" : {
      "post" : {
        "tags" : [ "vehicles" ],
        "summary" : "Upload vehicle profile image",
        "description" : "A token key is required for this call.",
        "operationId" : "uploadProfileImage",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "vehicle_id",
          "in" : "query",
          "description" : "Vehicle id to link image with",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UploadResponse"
            }
          }
        }
      }
    },
    "/vehicles/{id}/devices" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Retrieve a list of devices attached to a vehicle",
        "description" : "A token key is required for this call.",
        "operationId" : "getVehicleDevices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: services",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          }
        }
      }
    },
    "/vehicles/{id}/within" : {
      "get" : {
        "tags" : [ "vehicles" ],
        "summary" : "Evaluates whether the most recent GPS location for any attached device is within the geofences identified by the criteria defined by the query parameters",
        "description" : "A token key is required for this call.",
        "operationId" : "isWithinGeofences",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "location_type",
          "in" : "query",
          "description" : "Evaluate against all geofences associated with locations of this type for the company, unless ‘user_id’ is specified",
          "required" : false,
          "type" : "string",
          "default" : "all"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "Evaluate geofences for any locations associated with the user",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "location_id",
          "in" : "query",
          "description" : "If specified, location_type should not be specified.  Only evaluate whether the vehicle is within any geofences associated with this location.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/vehicletypes/{id}" : {
      "get" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Look up vehicle type by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Vehicle"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Update a vehicle type",
        "description" : "A token key is required for this call.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleType"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleType"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Delete vehicle type by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteVehicleType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicletypes" : {
      "get" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Get Vehicle Types",
        "description" : "A token key is required for this call.",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierarchy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only vehicles with this status",
          "required" : false,
          "type" : "string",
          "default" : "ALL",
          "enum" : [ "ALL", "DELETED" ]
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Add a new vehicle type",
        "description" : "A token key is required for this call.",
        "operationId" : "insert",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleType"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VehicleType"
            }
          }
        }
      }
    },
    "/vehicletypes/{id}/restore" : {
      "put" : {
        "tags" : [ "vehicletypes" ],
        "summary" : "Restore vehicle type by ID",
        "description" : "A token key is required for this call.",
        "operationId" : "restore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user/company",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/vehicletypes/merge" : {
      "post" : {
        "tags" : [ "vehicletypes" ],
        "operationId" : "mergeVehicleType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VehicleType"
          }
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/voip/extensions" : {
      "get" : {
        "tags" : [ "voip" ],
        "summary" : "Get all extensions",
        "description" : "A token key is required for this call.",
        "operationId" : "getExtensions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/voip/users" : {
      "get" : {
        "tags" : [ "voip" ],
        "summary" : "Get all extensions",
        "description" : "A service token key is required for this call.",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/voip/phonebook/device/{id}" : {
      "get" : {
        "tags" : [ "voip" ],
        "summary" : "Get phonebook for a device",
        "description" : "A token key is required for this call.",
        "operationId" : "getPhonebookForDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/voip/phonebook" : {
      "get" : {
        "tags" : [ "voip" ],
        "summary" : "Get phonebook for a user based on API key",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPhonebook",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/voip/events" : {
      "post" : {
        "tags" : [ "voip" ],
        "operationId" : "processEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VoipEvent"
            },
            "headers" : { }
          }
        }
      }
    },
    "/wifi/{id}" : {
      "get" : {
        "tags" : [ "wifi" ],
        "summary" : "Look up device by ID or IMEI",
        "description" : "A token key is required for this call.",
        "operationId" : "getWifi",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Device"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "wifi" ],
        "summary" : "update a wifi config",
        "description" : "A user token key is required for this call.",
        "operationId" : "updateWifi",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WifiDTO"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WifiDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "wifi" ],
        "summary" : "Delete a wifi config",
        "description" : "A token key is required for this call.",
        "operationId" : "deleteWifi",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/wifi" : {
      "get" : {
        "tags" : [ "wifi" ],
        "summary" : "Find a list of wifi configs",
        "description" : "A token key is required for this call. All devices in the company hierarchy (down direction only) are included. Response is enriched to include device stats, device model and type when applicable.",
        "operationId" : "getWifilist",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "direction",
          "in" : "query",
          "description" : "Direction of hierachy to include in result, options: UP, DOWN, BOTH. If not specified will return only current company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "wifi" ],
        "summary" : "Create a wifi config",
        "description" : "A user token key is required for this call.",
        "operationId" : "createWifi",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WifiDTO"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WifiDTO"
            }
          }
        }
      }
    },
    "/bulkimport/events/updatestatus" : {
      "post" : {
        "tags" : [ "bulkimportevents" ],
        "operationId" : "updateStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/devices/{imei}/events/io" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getIoEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imei",
          "in" : "path",
          "description" : "Device IMEI",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceEvent"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "getEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "device id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "comma separated list of event types. supported: IOR,VPM_IT,VPM_HC,VPM_IM,VPM_HB,VPM_EA,VPM_OR, SPEED,GEOFENCE,PRETRIP,FORM,PTO,ALERT,CAMERA,ALARM,DRIVER,MASS,FATIGUE,GPIO",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "sort result by: id, time_at, created_at, updated_at. default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "sort direction: asc, desc. default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceEvent"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/events/nmm" : {
      "post" : {
        "tags" : [ "events" ],
        "summary" : "Get events by device Id",
        "description" : "A user token key is required for this call.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MassMngtEvent"
            }
          }
        }
      }
    },
    "/devices/{deviceId}/positions" : {
      "get" : {
        "tags" : [ "positions" ],
        "summary" : "",
        "description" : "A user token key is required for this call.",
        "operationId" : "replayEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "device id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "highDefinition",
          "in" : "query",
          "description" : "Set to true if you need HD data",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "lastHdgpsLocation",
          "in" : "query",
          "description" : "Set to true if you need last HD gps location",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "sort result by: id, time_at, created_at, updated_at. default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "sort direction: asc, desc. default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PositionEvent"
            }
          }
        }
      }
    },
    "/events/pretrip/{eventId}" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "Get events by Id",
        "description" : "A user token key is required for this call.",
        "operationId" : "getPretripEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "event id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PreTripEvent"
            }
          }
        }
      }
    },
    "/forms/{id}/attachment/{externalId}" : {
      "get" : {
        "tags" : [ "forms" ],
        "summary" : "Get an attachment",
        "description" : "",
        "operationId" : "getAttachment",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "externalId",
          "in" : "path",
          "description" : "UUID of the attachment",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/forms/{id}/events" : {
      "get" : {
        "tags" : [ "forms" ],
        "summary" : "Get a list events of the specified form",
        "description" : "A token key is required for this call.",
        "operationId" : "getFormEventList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Filter range from date, yyyy-MM-dd",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Filter range to date, yyyy-MM-dd",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: vehicle, user, company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "forms" ],
        "summary" : "AMQP | Create an event",
        "description" : "A token key is required for this call.",
        "operationId" : "createEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormEvent"
            }
          }
        }
      }
    },
    "/forms/{id}/attachment" : {
      "post" : {
        "tags" : [ "forms" ],
        "summary" : "AMQP | Upload an attachment in JSON format",
        "description" : "A token key is required for this call.",
        "operationId" : "handleAttachment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Attachment json",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          }
        }
      }
    },
    "/forms/{id}/events/{eventId}" : {
      "get" : {
        "tags" : [ "forms" ],
        "summary" : "Get a form's event",
        "description" : "A token key is required for this call.",
        "operationId" : "getFormEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "embed",
          "in" : "query",
          "description" : "What needs to be included in response, options: vehicle, user, company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "B2B",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/forms/{id}/attachment2" : {
      "post" : {
        "tags" : [ "forms" ],
        "summary" : "AMQP | Upload an attachment in CBOR format",
        "description" : "A token key is required for this call.",
        "operationId" : "handleAttachment2",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Form's ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Attachment cbor",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a user or company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          }
        }
      }
    },
    "/future/actions" : {
      "post" : {
        "tags" : [ "futureactions" ],
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/future/actions/{userId}" : {
      "get" : {
        "tags" : [ "futureactions" ],
        "summary" : "Retrieve a user's pending Start of Day and Time zone",
        "description" : "A USER token key is required for this call.",
        "operationId" : "findActiveByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PendingStartofDay"
            }
          }
        }
      }
    },
    "/installations/job/{jobNumber}" : {
      "get" : {
        "tags" : [ "installations" ],
        "summary" : "Get list of Work Orders from Salesforce",
        "description" : "A user token key is required for this call.",
        "operationId" : "getJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "jobNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sap_id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/installations/job" : {
      "post" : {
        "tags" : [ "installations" ],
        "summary" : "post an installation job",
        "description" : "A user token key is required for this call.",
        "operationId" : "createJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/installations/salesforce_token" : {
      "get" : {
        "tags" : [ "installations" ],
        "operationId" : "getSalesforceJwtTokenPublic",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/installations/report/generate/daily" : {
      "get" : {
        "tags" : [ "installationsreport" ],
        "operationId" : "generateDailyReport",
        "parameters" : [ {
          "name" : "forceMonthly",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            },
            "headers" : { }
          }
        }
      }
    },
    "/vehicles/{vehicleId}/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "Get events by vehicleId",
        "description" : "A user token key is required for this call.",
        "operationId" : "getEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "description" : "vehicle id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "comma separated list of event types. supported: IOR,VPM_IT,VPM_HC,VPM_IM,VPM_HB,VPM_EA,VPM_OR, SPEED,GEOFENCE,PRETRIP,FORM,PTO,ALERT,CAMERA,ALARM,DRIVER,MASS,FATIGUE,GPIO",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "filter range from, yyyy-MM-ddTHH:mm:ss. default to 7 days",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "filter range to, yyyy-MM-ddTHH:mm:ss. default to now",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "sort result by: id, time_at, created_at, updated_at. default: time_at",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "sort direction: asc, desc. default: asc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "embed",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "options",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pruning",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "APP",
          "enum" : [ "ALL", "B2B", "LIST", "IDS", "DEVICES", "APP", "IAP", "WEB", "RELATIONS" ]
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "API key for a company/user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional company id for the request, only available with user api key",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceEvent"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Chronology" : {
      "type" : "object",
      "properties" : {
        "zone" : {
          "$ref" : "#/definitions/DateTimeZone"
        }
      }
    },
    "Company" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "parent" : {
          "$ref" : "#/definitions/Company"
        },
        "path" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "logo" : {
          "type" : "string"
        },
        "customerNumber" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "statisticsTz" : {
          "type" : "string"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "geofenceProviders" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "locale" : {
          "type" : "string"
        },
        "realm" : {
          "type" : "string"
        },
        "streamName" : {
          "type" : "string"
        },
        "salesforceId" : {
          "type" : "string"
        },
        "entityConfigurationList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityConfiguration"
          }
        }
      }
    },
    "DateTimeField" : {
      "type" : "object",
      "properties" : {
        "lenient" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/DateTimeFieldType"
        },
        "supported" : {
          "type" : "boolean"
        },
        "durationField" : {
          "$ref" : "#/definitions/DurationField"
        },
        "rangeDurationField" : {
          "$ref" : "#/definitions/DurationField"
        },
        "leapDurationField" : {
          "$ref" : "#/definitions/DurationField"
        },
        "minimumValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumValue" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DateTimeFieldType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "durationType" : {
          "$ref" : "#/definitions/DurationFieldType"
        },
        "rangeDurationType" : {
          "$ref" : "#/definitions/DurationFieldType"
        }
      }
    },
    "DateTimeZone" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "fixed" : {
          "type" : "boolean"
        }
      }
    },
    "DurationField" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/DurationFieldType"
        },
        "supported" : {
          "type" : "boolean"
        },
        "unitMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "precise" : {
          "type" : "boolean"
        }
      }
    },
    "DurationFieldType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "EntityConfiguration" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "COMPANY", "FLEET", "VEHICLE", "DEVICE", "GEOFENCE", "USER", "CUSTOMER", "SUBSCRIPTION", "SUBSCRIPTION_PACK", "LOCATION", "RUNSHEET", "JOB", "ATTACHMENT", "PRETRIP", "MESSAGE", "DRIVER_EVENT", "FATIGUE_EVENT", "PTC_EVENT", "FORM", "FORM_EVENT", "VEHICLE_TYPE", "CONTACT", "SHIFT", "REGISTRATION_CODE", "ROLE", "DEVICE_AGREEMENT", "GEOFENCE_ASSOCIATION", "VEHICLE_MAINTENANCE_TYPE", "FOLDER", "DOCUMENT", "VEHICLE_MAINTENANCE_SCHEDULE", "SCHEDULE", "TRIP", "DEVICE_CONFIGURATION", "WIFI", "DRIVER_MANAGEMENT_TYPE", "DRIVER_MANAGEMENT_SCHEDULE", "USER_TYPE", "SUGGESTED_EDIT", "VEHICLE_AXLE_COMBINATION", "MASS_SHCEME_CONFIG", "VEHICLE_CONFIG", "MASS_MANAGEMENT", "CALENDAR", "METER_THRESHOLD", "EXTERNAL_ASSOCIATION", "VEHICLE_DRIVER_ASSOCIATION", "VEHICLE_MODEL", "BULK_IMPORT", "ENROLMENT", "SAP_ITEM", "INSTALL_KIT", "AVAILABLE_KIT", "COMPATIBLE_MODEL" ]
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "LocalDateTime" : {
      "type" : "object",
      "properties" : {
        "era" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dayOfYear" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dayOfWeek" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "year" : {
          "type" : "integer",
          "format" : "int32"
        },
        "weekOfWeekyear" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chronology" : {
          "$ref" : "#/definitions/Chronology"
        },
        "millisOfDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "monthOfYear" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hourOfDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minuteOfHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "secondOfMinute" : {
          "type" : "integer",
          "format" : "int32"
        },
        "millisOfSecond" : {
          "type" : "integer",
          "format" : "int32"
        },
        "weekyear" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearOfEra" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearOfCentury" : {
          "type" : "integer",
          "format" : "int32"
        },
        "centuryOfEra" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DateTimeField"
          }
        },
        "fieldTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DateTimeFieldType"
          }
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "Vehicle" : {
      "type" : "object",
      "required" : [ "registration", "registrationState" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "type" : {
          "$ref" : "#/definitions/VehicleType"
        },
        "registration" : {
          "type" : "string"
        },
        "registrationState" : {
          "type" : "string"
        },
        "registrationCountry" : {
          "type" : "string"
        },
        "registrationCountryName" : {
          "type" : "string"
        },
        "registrationStateName" : {
          "type" : "string"
        },
        "vin" : {
          "type" : "string"
        },
        "engineNumber" : {
          "type" : "string"
        },
        "make" : {
          "type" : "string"
        },
        "model" : {
          "type" : "string"
        },
        "note" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "externalReference" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "defaultDriver" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleModelId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "operationalVehicleModelId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "operationalVehicleModel" : {
          "$ref" : "#/definitions/VehicleModel"
        },
        "eldVehicle" : {
          "type" : "boolean"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "VehicleModel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "make" : {
          "type" : "string"
        },
        "model" : {
          "type" : "string"
        },
        "submodel" : {
          "type" : "string"
        },
        "yearOfManufacture" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dbcFileKey" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "source" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "extras" : {
          "type" : "string"
        },
        "estimatedRange" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "VehicleType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "icon" : {
          "type" : "string"
        },
        "fuelType" : {
          "type" : "string"
        }
      }
    },
    "TrackingLinkReq" : {
      "type" : "object",
      "properties" : {
        "vehicleIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "fleetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startAt" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string"
        }
      }
    },
    "PODLinkReq" : {
      "type" : "object",
      "properties" : {
        "jobId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startAt" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string"
        }
      }
    },
    "PermissionResponse" : {
      "type" : "object",
      "properties" : {
        "configs" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "services" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "permissions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Permission" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "subject" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "siteAdmin" : {
          "type" : "boolean"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        }
      }
    },
    "Announcement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "timeAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "softwareVersion" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "CurrentVehicle" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "editable" : {
          "type" : "boolean"
        }
      }
    },
    "DocumentDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "uploadedAt" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "uploadedBy" : {
          "type" : "string"
        }
      }
    },
    "DriverNotes" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "email" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/UserType"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "mobile" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "timeZone" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "licenceState" : {
          "type" : "string"
        },
        "licenceStateName" : {
          "type" : "string"
        },
        "licenceNumber" : {
          "type" : "string"
        },
        "licenceCountry" : {
          "type" : "string"
        },
        "externalPin" : {
          "type" : "string"
        },
        "electronicPin" : {
          "type" : "string"
        },
        "externalReference" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "imageUrl" : {
          "type" : "string"
        },
        "imageRef" : {
          "type" : "string"
        },
        "userSession" : {
          "$ref" : "#/definitions/UserSession"
        },
        "driverDocs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DocumentDTO"
          }
        },
        "driverNotes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DriverNotes"
          }
        },
        "currentVehicles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CurrentVehicle"
          }
        },
        "fleetAccessFlag" : {
          "type" : "string"
        },
        "branchAccessFlag" : {
          "type" : "string"
        },
        "startOfDay" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startTimeOfDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "featureList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UserSession" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "signInCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentSignInAt" : {
          "type" : "string"
        },
        "lastSignInAt" : {
          "type" : "string"
        },
        "currentSignInIP" : {
          "type" : "string"
        },
        "lastSignInIP" : {
          "type" : "string"
        },
        "rememberCreatedAt" : {
          "type" : "string"
        },
        "resetPasswordSentAt" : {
          "type" : "string"
        },
        "failedAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lockedAt" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "lastFatigueEvent" : {
          "type" : "string"
        },
        "lastEventAt" : {
          "type" : "string"
        },
        "lastFatigueEventAt" : {
          "type" : "string"
        },
        "lastCheckpointAt" : {
          "type" : "string"
        },
        "mappedAction" : {
          "type" : "string"
        },
        "lastStatusReport" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "customFields" : {
          "type" : "string"
        },
        "licenceExpiryOn" : {
          "type" : "string"
        },
        "healthCheckExpiryOn" : {
          "type" : "string"
        },
        "lastRuleset" : {
          "type" : "string"
        },
        "lastRulesetAt" : {
          "type" : "string"
        },
        "loginDaysCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "UserType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "AvailableKit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "compatibleModelId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sapItemId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instructions" : {
          "type" : "string"
        },
        "documentUrl" : {
          "type" : "string"
        },
        "kitType" : {
          "type" : "string"
        },
        "regions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "BulkImport" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fileName" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "IN_PROGRESS", "FAILED", "PARTIAL", "SUCCESS" ]
        },
        "totalProcessed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalError" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalRecord" : {
          "type" : "integer",
          "format" : "int32"
        },
        "uploadedBy" : {
          "$ref" : "#/definitions/User"
        },
        "templateConfigKey" : {
          "type" : "string"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "fullName" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "BulkImportStatus" : {
      "type" : "object",
      "properties" : {
        "batchId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "filename" : {
          "type" : "string"
        },
        "processingStatus" : {
          "type" : "string",
          "enum" : [ "IN_PROGRESS", "FAILED", "PARTIAL", "SUCCESS" ]
        },
        "processedTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "recordTotal" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Carrier" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "name" : {
          "type" : "string"
        },
        "officialIdentifer" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "postcode" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "county" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedBy" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fleet" : {
          "$ref" : "#/definitions/Fleet"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "dotNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Fleet" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "externalId" : {
          "type" : "string"
        },
        "colour" : {
          "type" : "string"
        },
        "iconType" : {
          "type" : "string"
        },
        "carrierId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "carrier" : {
          "$ref" : "#/definitions/Carrier"
        }
      }
    },
    "ApiKey" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accessToken" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "API", "REGISTRATION", "USER", "HMAC", "LOGIN" ]
        },
        "policy" : {
          "type" : "string"
        },
        "adapterId" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "number" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "freeformStreetAddress" : {
          "type" : "string"
        },
        "suburb" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "county" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postcode" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "fax" : {
          "type" : "string"
        },
        "eld" : {
          "type" : "string"
        },
        "eldCanada" : {
          "type" : "string"
        },
        "stateName" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AddressAttribute"
          }
        }
      }
    },
    "AddressAttribute" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Attachment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "url" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "contentLength" : {
          "type" : "integer",
          "format" : "int64"
        },
        "compressionType" : {
          "type" : "string",
          "enum" : [ "BZIP2", "DEFLATE" ]
        },
        "hash" : {
          "type" : "string"
        },
        "mimeType" : {
          "type" : "string"
        },
        "compressed" : {
          "type" : "boolean"
        },
        "orientation" : {
          "type" : "integer",
          "format" : "int32"
        },
        "eventTimeAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attr" : {
          "type" : "string"
        },
        "isNew" : {
          "type" : "boolean"
        }
      }
    },
    "Device" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "type" : {
          "$ref" : "#/definitions/DeviceType"
        },
        "model" : {
          "$ref" : "#/definitions/DeviceModel"
        },
        "did" : {
          "type" : "string"
        },
        "registration" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "serialNumber" : {
          "type" : "string"
        },
        "imei" : {
          "type" : "string"
        },
        "sim" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "operatingSystem" : {
          "type" : "string"
        },
        "firmwareVersion" : {
          "type" : "string"
        },
        "softwareVersion" : {
          "type" : "string"
        },
        "note" : {
          "type" : "string"
        },
        "auto" : {
          "type" : "boolean"
        },
        "iapId" : {
          "type" : "string"
        },
        "releaseVersion" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "registeredAt" : {
          "type" : "string"
        },
        "cameraSensitivity" : {
          "type" : "string"
        },
        "volume" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DeviceModel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "DeviceType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "$ref" : "#/definitions/LocationType"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "siteNotes" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "timeZone" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "GPS" : {
          "$ref" : "#/definitions/Position"
        }
      }
    },
    "LocationType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Position" : {
      "type" : "object",
      "properties" : {
        "Lat" : {
          "type" : "number",
          "format" : "double"
        },
        "Lng" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "VideoRequestEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ACC_HIGH", "ACC_MEDIUM", "ACC_LOW", "DRIVER_INPUT", "IO_INPUT", "FATIGUE", "DISTRACTION", "VIDEO_REQUEST", "SNAPSHOT", "OTHER", "HARSH_USAGE", "HARSH_CORNERING", "HARSH_BRAKING", "SIGN_VIOLATION", "SPEED_VIOLATION", "CONFIG_SPEED_VIOLATION", "TAIL_GATING", "COLLISION_WARNING", "LANE_DRIFT_WARNING" ]
        },
        "availableAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "notes" : {
          "type" : "string"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "driver" : {
          "$ref" : "#/definitions/User"
        },
        "attachment" : {
          "$ref" : "#/definitions/Attachment"
        },
        "fleets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Fleet"
          }
        },
        "extra" : {
          "type" : "string"
        }
      }
    },
    "CompatibleModel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleModel" : {
          "$ref" : "#/definitions/VehicleModel"
        },
        "deviceModel" : {
          "$ref" : "#/definitions/DeviceModel"
        }
      }
    },
    "ConfigKey" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "service" : {
          "$ref" : "#/definitions/Service"
        },
        "key" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "defaultValueIu" : {
          "type" : "string"
        },
        "deviceType" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "siteAdmin" : {
          "type" : "boolean"
        },
        "customerAccess" : {
          "type" : "boolean"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "packages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DeviceConfiguration" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "fleet" : {
          "$ref" : "#/definitions/Fleet"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "source" : {
          "type" : "string"
        },
        "serviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "service" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "vehicleTypeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AlertSetting" : {
      "type" : "object",
      "properties" : {
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ALARM", "PRETRIP", "SPEED", "GEOFENCE", "DURESS", "FATIGUE", "VEHICLE_MAINTENANCE", "DRIVER_MANAGEMENT", "MASS_MANAGEMENT", "ROUTE_COMPLIANCE", "TPMS", "ENGINE", "FORM", "SMARTJOBS", "CAMERA", "METER", "ELD", "GPIO", "OUT_OF_HOURS", "SYSTEM_NOTIFICATION" ]
        },
        "sms" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "boolean"
        },
        "onScreen" : {
          "type" : "boolean"
        },
        "popUp" : {
          "type" : "boolean"
        },
        "expiry" : {
          "type" : "integer",
          "format" : "int32"
        },
        "options" : {
          "type" : "string"
        },
        "extras" : {
          "type" : "string"
        }
      }
    },
    "Code" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        }
      }
    },
    "DeviceHealth2" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "deviceStats" : {
          "$ref" : "#/definitions/DeviceStats"
        },
        "vehicleStats" : {
          "$ref" : "#/definitions/VehicleStats"
        },
        "sections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Section"
          }
        }
      }
    },
    "DeviceMeter" : {
      "type" : "object",
      "properties" : {
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "type" : {
          "type" : "string"
        },
        "rebasedAt" : {
          "type" : "string"
        },
        "rebasedBy" : {
          "$ref" : "#/definitions/User"
        },
        "rebasedOffset" : {
          "type" : "number",
          "format" : "double"
        },
        "base" : {
          "type" : "number",
          "format" : "double"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        },
        "diff" : {
          "type" : "number",
          "format" : "double"
        },
        "source" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "DeviceMeterWithVehicle" : {
      "type" : "object",
      "properties" : {
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "type" : {
          "type" : "string"
        },
        "rebasedAt" : {
          "type" : "string"
        },
        "rebasedBy" : {
          "$ref" : "#/definitions/User"
        },
        "rebasedOffset" : {
          "type" : "number",
          "format" : "double"
        },
        "base" : {
          "type" : "number",
          "format" : "double"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        },
        "diff" : {
          "type" : "number",
          "format" : "double"
        },
        "source" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DeviceStats" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastCommsAt" : {
          "type" : "string"
        },
        "lastEvent" : {
          "type" : "string"
        },
        "lastEventAt" : {
          "type" : "string"
        },
        "odometer" : {
          "type" : "number",
          "format" : "double"
        },
        "ignition" : {
          "type" : "string"
        },
        "obm" : {
          "type" : "string"
        },
        "obmAt" : {
          "type" : "string"
        },
        "sdmTcm" : {
          "type" : "number",
          "format" : "double"
        },
        "sdmAt" : {
          "type" : "string"
        },
        "gpsAt" : {
          "type" : "string"
        },
        "gps" : {
          "$ref" : "#/definitions/Gps"
        },
        "currentUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currentUser2Id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "location" : {
          "type" : "string"
        },
        "devAppVersion" : {
          "type" : "string"
        },
        "devAppInfo" : {
          "type" : "string"
        },
        "devVersion" : {
          "type" : "string"
        },
        "devInfo" : {
          "type" : "string"
        },
        "storageInfo" : {
          "type" : "string"
        },
        "squarellVersion" : {
          "type" : "string"
        },
        "squarellInfo" : {
          "type" : "string"
        },
        "lastDuressId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastDuressAt" : {
          "type" : "string"
        },
        "deviceStatusEvent" : {
          "$ref" : "#/definitions/DeviceStatusEvent"
        },
        "isShutdown" : {
          "type" : "boolean"
        },
        "shutdownOdo" : {
          "type" : "number",
          "format" : "double"
        },
        "shutdownAt" : {
          "type" : "string"
        },
        "runsheetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dynamicFeatures" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "smartNavInfo" : {
          "type" : "string"
        },
        "lastVpm" : {
          "type" : "string"
        },
        "lastVpmAt" : {
          "type" : "string"
        },
        "lastRuc" : {
          "type" : "string"
        },
        "lastRucAt" : {
          "type" : "string"
        },
        "lastEdr" : {
          "type" : "string"
        },
        "lastEdrAt" : {
          "type" : "string"
        },
        "lastGpio" : {
          "type" : "string"
        },
        "lastGpioAt" : {
          "type" : "string"
        },
        "movement" : {
          "type" : "string"
        },
        "movementAt" : {
          "type" : "string"
        },
        "auxInfo" : {
          "type" : "string"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currentVehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastSatelliteAt" : {
          "type" : "string"
        },
        "lastAuthAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "currentUser" : {
          "$ref" : "#/definitions/User"
        },
        "currentUser2" : {
          "$ref" : "#/definitions/User"
        },
        "runsheet" : {
          "$ref" : "#/definitions/Runsheet"
        },
        "meters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceMeter"
          }
        },
        "attr" : {
          "type" : "string"
        }
      }
    },
    "DeviceStatusEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "Geofence" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "externalId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "style" : {
          "type" : "string"
        },
        "shape" : {
          "$ref" : "#/definitions/Shape"
        },
        "thresholdOvertime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "thresholdUndertime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "thresholdSpeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offsetSpeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "thresholdDurationSpeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "speedAssist" : {
          "type" : "boolean"
        },
        "driverNotification" : {
          "type" : "string"
        },
        "area_sqm" : {
          "type" : "number",
          "format" : "double"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "centroid" : {
          "$ref" : "#/definitions/Position"
        },
        "radius" : {
          "type" : "number",
          "format" : "double"
        },
        "alertSettings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AlertSetting"
          }
        },
        "shape2" : {
          "$ref" : "#/definitions/Shape"
        },
        "activeTime" : {
          "type" : "string"
        },
        "timeZone" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "boolean"
        }
      }
    },
    "Gps" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "valid" : {
          "type" : "boolean"
        },
        "Lat" : {
          "type" : "number",
          "format" : "double"
        },
        "Lng" : {
          "type" : "number",
          "format" : "double"
        },
        "Spd" : {
          "type" : "number",
          "format" : "double"
        },
        "Dir" : {
          "type" : "number",
          "format" : "double"
        },
        "NSat" : {
          "type" : "number",
          "format" : "double"
        },
        "Alt" : {
          "type" : "number",
          "format" : "double"
        },
        "HDOP" : {
          "type" : "number",
          "format" : "double"
        },
        "At" : {
          "type" : "integer",
          "format" : "int64"
        },
        "Extra" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "Item" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "itemId" : {
          "type" : "string"
        },
        "itemIdReverse" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "LOADED", "DELIVERED", "DAMAGED", "CHECKED" ]
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "commodity" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "adg7Code" : {
          "type" : "string"
        },
        "cubics" : {
          "type" : "number"
        },
        "cubicsUom" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "number"
        },
        "weightUom" : {
          "type" : "string"
        },
        "temperature" : {
          "type" : "number"
        },
        "temperatureUom" : {
          "type" : "string"
        },
        "time" : {
          "type" : "number"
        },
        "timeUom" : {
          "type" : "string"
        },
        "externalReference" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ItemAttribute"
          }
        }
      }
    },
    "ItemAttribute" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "item" : {
          "$ref" : "#/definitions/Item"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Job" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runsheet" : {
          "$ref" : "#/definitions/Runsheet"
        },
        "seq" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stop" : {
          "$ref" : "#/definitions/Stop"
        },
        "actualStop" : {
          "$ref" : "#/definitions/Stop"
        },
        "customer" : {
          "$ref" : "#/definitions/Customer"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "PICKUP", "DELIVERY", "REST_BREAK", "FUEL_STOP", "TASK", "BANKING", "DEPOT", "CUSTOMER_FEEDBACK", "TIMER", "ADHOC", "WAYPOINT", "OTHER" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "STARTED", "ARRIVED", "HELD", "DEPARTED", "FINISHED", "COMPLETED", "CANCELLED", "UNABLE_TO_COMPLETE", "DELETED" ]
        },
        "startAt" : {
          "type" : "string"
        },
        "endAt" : {
          "type" : "string"
        },
        "actualStartAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "actualEndAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "instructions" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "orderNumber" : {
          "type" : "string"
        },
        "customerOrderNumber" : {
          "type" : "string"
        },
        "customerName" : {
          "type" : "string"
        },
        "contactName" : {
          "type" : "string"
        },
        "contactNumber" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/JobAttribute"
          }
        },
        "jobItems" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/JobItem"
          }
        },
        "jobAttachments" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/JobAttachment"
          }
        }
      }
    },
    "JobAttachment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "job" : {
          "$ref" : "#/definitions/Job"
        },
        "attachment" : {
          "$ref" : "#/definitions/Attachment"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "POD", "PHOTO", "BINS" ]
        },
        "notes" : {
          "type" : "string"
        }
      }
    },
    "JobAttribute" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "job" : {
          "$ref" : "#/definitions/Job"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "JobItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "job" : {
          "$ref" : "#/definitions/Job"
        },
        "item" : {
          "$ref" : "#/definitions/Item"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "LOADED", "DELIVERED", "DAMAGED", "CHECKED" ]
        },
        "originalQuantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "loadedQuantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "unloadedQuantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "loadedVarianceCode" : {
          "$ref" : "#/definitions/Code"
        },
        "unloadedVarianceCode" : {
          "$ref" : "#/definitions/Code"
        },
        "varianceReason" : {
          "type" : "string"
        },
        "loadedCubics" : {
          "type" : "number"
        },
        "unloadedCubics" : {
          "type" : "number"
        },
        "loadedWeight" : {
          "type" : "number"
        },
        "unloadedWeight" : {
          "type" : "number"
        },
        "loadedTemperature" : {
          "type" : "number"
        },
        "unloadedTemperature" : {
          "type" : "number"
        },
        "loadedTime" : {
          "type" : "number"
        },
        "unloadedTime" : {
          "type" : "number"
        }
      }
    },
    "Leg" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "trip" : {
          "$ref" : "#/definitions/Trip"
        },
        "startStop" : {
          "$ref" : "#/definitions/Stop"
        },
        "endStop" : {
          "$ref" : "#/definitions/Stop"
        },
        "duration" : {
          "type" : "number",
          "format" : "double"
        },
        "distance" : {
          "type" : "number",
          "format" : "double"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "routeDefinition" : {
          "type" : "string"
        },
        "startSeq" : {
          "type" : "integer",
          "format" : "int64"
        },
        "endSeq" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Runsheet" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "carrier" : {
          "$ref" : "#/definitions/Company"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "plannedTrip" : {
          "$ref" : "#/definitions/Trip"
        },
        "actualTrip" : {
          "$ref" : "#/definitions/Trip"
        },
        "name" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "HEADLESS" ]
        },
        "notes" : {
          "type" : "string"
        },
        "externalId" : {
          "type" : "string"
        },
        "externalReference" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "OPENED", "LOAD_VERIFIED", "COMPLETED", "CANCELLED", "HELD" ]
        },
        "scheduledAt" : {
          "type" : "string"
        },
        "jobs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Job"
          }
        },
        "attributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RunsheetAttribute"
          }
        }
      }
    },
    "RunsheetAttribute" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runsheet" : {
          "$ref" : "#/definitions/Runsheet"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "Section" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "subtitle" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "OK", "NOK", "WARN" ]
        },
        "expanded" : {
          "type" : "boolean"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Item"
          }
        }
      }
    },
    "Shape" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "points" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Position"
          }
        },
        "multiPoints" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Position"
            }
          }
        }
      }
    },
    "Stop" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "trip" : {
          "$ref" : "#/definitions/Trip"
        },
        "seq" : {
          "type" : "integer",
          "format" : "int64"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "geofence" : {
          "$ref" : "#/definitions/Geofence"
        },
        "correlationId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "ARRIVED", "DEPARTED", "COMPLETED", "DELETED" ]
        },
        "arrivedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "departedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "TachoFatigueStatusEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalId" : {
          "type" : "string"
        },
        "cardId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cardNumber" : {
          "type" : "string"
        },
        "eventAt" : {
          "type" : "string"
        },
        "mode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "activity" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "alert" : {
          "type" : "string"
        },
        "alertLevel" : {
          "type" : "integer",
          "format" : "int32"
        },
        "driveContinuous" : {
          "type" : "integer",
          "format" : "int32"
        },
        "driveDaily" : {
          "type" : "integer",
          "format" : "int32"
        },
        "driveWeekly" : {
          "type" : "integer",
          "format" : "int32"
        },
        "driveTwoweekly" : {
          "type" : "integer",
          "format" : "int32"
        },
        "remainingDrive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nextRestBreakDuration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "extendedDrivesAvailable" : {
          "type" : "integer",
          "format" : "int32"
        },
        "breakRestTaken" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requiredBreakRest" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxAllowedNextDrive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "reducedRestsAvailable" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nextDailyRestDueAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "nextWeeklyRestDueAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "workDaily" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workWeekly" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workBreakTaken" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxDailyDrive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxWeeklyDrive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxTwoWeekDrive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minNextDailyRest" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minNextWeeklyRest" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Trip" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "$ref" : "#/definitions/Trip"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "PLANNED", "ACTUAL", "GEO_PLANNED", "GEO_ACTUAL", "ROUTE_PLANNED", "ROUTE_ACTUAL", "NETWORK_ACTUAL", "IO", "JOURNEY_PLANNED", "SDP_PLANNED" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "STARTED", "IN_PROGRESS", "COMPLETED", "DELETED", "PRETRIP", "ABANDONED" ]
        },
        "estimatedDuration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "externalId" : {
          "type" : "string"
        },
        "correlationId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "attr" : {
          "type" : "string"
        },
        "purpose" : {
          "type" : "string"
        },
        "startEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "endEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedBy" : {
          "$ref" : "#/definitions/User"
        },
        "stops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Stop"
          }
        },
        "legs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Leg"
          }
        },
        "tripAssociations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TripAssociation"
          }
        },
        "plannedDuration" : {
          "type" : "number",
          "format" : "double"
        },
        "calculatedDistance" : {
          "type" : "number",
          "format" : "double"
        },
        "stopsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdBy" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "TripAssociation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fleetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "VehicleStats" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastRwcOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "registrationRnewalOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "insuranceOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "permitOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "iacOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "customFields" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "currentUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currentUser2Id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "gpsOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "gpsOdometerRef" : {
          "type" : "number",
          "format" : "double"
        },
        "gpsEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "gpsEngineHoursRef" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffOdometerRef" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffEngineHoursRef" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffFuel" : {
          "type" : "number",
          "format" : "double"
        },
        "canDiffFuelRef" : {
          "type" : "number",
          "format" : "double"
        },
        "canOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "canEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "canFuel" : {
          "type" : "number",
          "format" : "double"
        },
        "lastReadingsAt" : {
          "type" : "string"
        },
        "runsheetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currentDeviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastEldDiagnosticCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "lastEldDiagnosticsAt" : {
          "type" : "string"
        },
        "cumulatedRange" : {
          "type" : "number",
          "format" : "double"
        },
        "cumulatedEnergyUsage" : {
          "type" : "number",
          "format" : "double"
        },
        "lastAuthAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "currentUser" : {
          "$ref" : "#/definitions/User"
        },
        "currentUser2" : {
          "$ref" : "#/definitions/User"
        },
        "runsheet" : {
          "$ref" : "#/definitions/Runsheet"
        },
        "attr" : {
          "type" : "string"
        },
        "tachoFatigueStatusEvent" : {
          "$ref" : "#/definitions/TachoFatigueStatusEvent"
        },
        "evDeviceMeters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceMeterWithVehicle"
          }
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "DeviceHealth" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "deviceStats" : {
          "$ref" : "#/definitions/DeviceStats"
        },
        "vehicleStats" : {
          "$ref" : "#/definitions/VehicleStats"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Item"
          }
        }
      }
    },
    "VehicleMeter" : {
      "type" : "object",
      "properties" : {
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "type" : {
          "type" : "string"
        },
        "rebasedAt" : {
          "type" : "string"
        },
        "rebasedBy" : {
          "$ref" : "#/definitions/User"
        },
        "rebasedOffset" : {
          "type" : "number",
          "format" : "double"
        },
        "base" : {
          "type" : "number",
          "format" : "double"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        },
        "diff" : {
          "type" : "number",
          "format" : "double"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "source" : {
          "type" : "string"
        },
        "useDifferential" : {
          "type" : "boolean"
        }
      }
    },
    "Agreement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "subscriptionPack" : {
          "$ref" : "#/definitions/SubscriptionPack"
        },
        "contractStartAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "contractEndAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "workOrder" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "price" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "enabledAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "expiresAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        }
      }
    },
    "DeviceAgreement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "agreement" : {
          "$ref" : "#/definitions/Agreement"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "SubscriptionPack" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "billingCode" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "Gpio" : {
      "type" : "object",
      "properties" : {
        "inputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GpioInput"
          }
        },
        "outputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GpioOutput"
          }
        }
      }
    },
    "GpioInput" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "occurrence" : {
          "type" : "string"
        },
        "verb" : {
          "type" : "string"
        },
        "disambiguator" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "lastStatusChange" : {
          "type" : "string"
        }
      }
    },
    "GpioOutput" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "occurrence" : {
          "type" : "string"
        },
        "verb" : {
          "type" : "string"
        },
        "disambiguator" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "lastStatusChangeRequest" : {
          "type" : "string"
        },
        "nextStatus" : {
          "type" : "string"
        },
        "lastStatusChangeResponse" : {
          "type" : "string"
        },
        "lastStatusChange" : {
          "type" : "string"
        }
      }
    },
    "DeviceInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "imei" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "receivedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Document" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "documentTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "md5" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "acknowledge" : {
          "type" : "boolean"
        },
        "overwritten" : {
          "type" : "boolean"
        },
        "uploadedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "uploadedBy" : {
          "type" : "integer",
          "format" : "int64"
        },
        "folders" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Folder"
          }
        },
        "associations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DocumentAssociation"
          }
        },
        "recipientDevices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceInfo"
          }
        }
      }
    },
    "DocumentAssociation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "documentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fleetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Folder" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "statusCode" : {
          "type" : "string"
        }
      }
    },
    "UploadResponse" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "imageRef" : {
          "type" : "string"
        },
        "imageDownscaled" : {
          "type" : "boolean"
        }
      }
    },
    "DocumentEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventType" : {
          "type" : "string",
          "enum" : [ "MANIFEST", "RECEIVED", "READ", "ACKNOWLEDGED", "FAILED", "UPLOADED" ]
        },
        "document" : {
          "$ref" : "#/definitions/Document"
        },
        "documentVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "deviceVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "userVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "EngineProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "name" : {
          "type" : "string"
        },
        "configurations" : {
          "type" : "string"
        }
      }
    },
    "Enrolment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheme" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "startedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "cancelledAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "installationDateTime" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "previousId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyDetails" : {
          "type" : "string"
        },
        "deviceDetails" : {
          "type" : "string"
        },
        "vehicleDetails" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        }
      }
    },
    "Form" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "alertOnCompletion" : {
          "type" : "boolean"
        }
      }
    },
    "Audit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "COMPANY", "FLEET", "VEHICLE", "DEVICE", "GEOFENCE", "USER", "CUSTOMER", "SUBSCRIPTION", "SUBSCRIPTION_PACK", "LOCATION", "RUNSHEET", "JOB", "ATTACHMENT", "PRETRIP", "MESSAGE", "DRIVER_EVENT", "FATIGUE_EVENT", "PTC_EVENT", "FORM", "FORM_EVENT", "VEHICLE_TYPE", "CONTACT", "SHIFT", "REGISTRATION_CODE", "ROLE", "DEVICE_AGREEMENT", "GEOFENCE_ASSOCIATION", "VEHICLE_MAINTENANCE_TYPE", "FOLDER", "DOCUMENT", "VEHICLE_MAINTENANCE_SCHEDULE", "SCHEDULE", "TRIP", "DEVICE_CONFIGURATION", "WIFI", "DRIVER_MANAGEMENT_TYPE", "DRIVER_MANAGEMENT_SCHEDULE", "USER_TYPE", "SUGGESTED_EDIT", "VEHICLE_AXLE_COMBINATION", "MASS_SHCEME_CONFIG", "VEHICLE_CONFIG", "MASS_MANAGEMENT", "CALENDAR", "METER_THRESHOLD", "EXTERNAL_ASSOCIATION", "VEHICLE_DRIVER_ASSOCIATION", "VEHICLE_MODEL", "BULK_IMPORT", "ENROLMENT", "SAP_ITEM", "INSTALL_KIT", "AVAILABLE_KIT", "COMPATIBLE_MODEL" ]
        },
        "category" : {
          "type" : "string",
          "enum" : [ "ENTITY", "MODULE" ]
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "domain" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "CREATE", "UPDATE", "DELETE", "VIEW", "PASSWORD_ERROR", "PASSWORD_CHANGED", "PASSWORD_RESET_REQUEST", "PASSWORD_UPDATE_REQUEST", "VERIFY_EMAIL_REQUEST", "CONFIGURE_OTP", "PASSWORD_RESET", "PASSWORD_RESET_ERROR", "LOGIN", "LOGOUT", "RESTORE", "REGISTER", "REPLACE", "CONFLICT" ]
        },
        "comment" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "string"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "Inspection" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fleets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Fleet"
          }
        },
        "repairedDate" : {
          "type" : "string"
        },
        "repairedBy" : {
          "type" : "string"
        },
        "inspectionBy" : {
          "$ref" : "#/definitions/User"
        },
        "schedule" : {
          "$ref" : "#/definitions/Schedule"
        },
        "details" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CLOSED", "OPENED", "REPAIRED", "INPROGRESS", "PASS", "FAIL", "UNKNOWN" ]
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "inspectionDate" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "checklistId" : {
          "type" : "string"
        },
        "checklistName" : {
          "type" : "string"
        },
        "completedAt" : {
          "type" : "string"
        },
        "completionDurationSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "location" : {
          "type" : "string"
        },
        "signature" : {
          "$ref" : "#/definitions/Attachment"
        },
        "questions" : {
          "type" : "string"
        },
        "failedQuestions" : {
          "type" : "string"
        },
        "isDVIR" : {
          "type" : "boolean"
        }
      }
    },
    "ManageType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "vehicleTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VehicleType"
          }
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Schedule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "string"
        },
        "completionParameters" : {
          "type" : "string"
        },
        "cancellationParameters" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PENDING", "DUE_NOW", "OVERDUE", "COMPLETED", "DELETED", "CANCELLED", "INVALID" ]
        },
        "schedulesOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "eventOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "VEHICLE_MAINTENANCE", "DRIVER_MANAGEMENT" ]
        },
        "manageTypeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "source" : {
          "type" : "string"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "manageType" : {
          "$ref" : "#/definitions/ManageType"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "driver" : {
          "$ref" : "#/definitions/User"
        },
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScheduleEvent"
          }
        },
        "fleetIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "scheduleParameters" : {
          "$ref" : "#/definitions/ScheduleParameters"
        },
        "useRucOdometerSource" : {
          "type" : "boolean"
        },
        "lastDueNowEventAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "checklistEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastActiveStatus" : {
          "type" : "string",
          "enum" : [ "PENDING", "DUE_NOW", "OVERDUE", "COMPLETED", "DELETED", "CANCELLED", "INVALID" ]
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ScheduleEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userVersion" : {
          "type" : "integer",
          "format" : "int64"
        },
        "gps" : {
          "$ref" : "#/definitions/Gps"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "schedule" : {
          "$ref" : "#/definitions/Schedule"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PENDING", "DUE_NOW", "OVERDUE", "COMPLETED", "DELETED", "CANCELLED", "INVALID" ]
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ScheduleParameters" : {
      "type" : "object",
      "properties" : {
        "alertOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "odometer" : {
          "type" : "number",
          "format" : "double"
        },
        "overdueOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "repeatOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "alertEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "engineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "overdueEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "repeatEngineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "days" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overdueDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "repeatSchedulesOn" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "InstallKit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "kitId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "partId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "IoTrip" : {
      "type" : "object",
      "properties" : {
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "driverId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleName" : {
          "type" : "string"
        },
        "fleets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Fleet"
          }
        },
        "startedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "endedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "startLocation" : {
          "type" : "string"
        },
        "endLocation" : {
          "type" : "string"
        },
        "distanceKm" : {
          "type" : "number",
          "format" : "double"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "STARTED", "IN_PROGRESS", "COMPLETED", "DELETED", "PRETRIP", "ABANDONED" ]
        },
        "externalId" : {
          "type" : "string"
        },
        "correlationId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "attr" : {
          "type" : "string"
        },
        "purpose" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "durationSecs" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityType" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "emailNotification" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "mobile" : {
          "type" : "string"
        },
        "mobileNotification" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "internal" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "timeZone" : {
          "type" : "string"
        }
      }
    },
    "UserLocation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parent" : {
          "$ref" : "#/definitions/Message"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "sender" : {
          "$ref" : "#/definitions/User"
        },
        "priority" : {
          "$ref" : "#/definitions/MessagePriority"
        },
        "type" : {
          "$ref" : "#/definitions/MessageType"
        },
        "subject" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "readAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "externalId" : {
          "type" : "string"
        },
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageEvent"
          }
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "MessageEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventType" : {
          "type" : "string"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "receiver" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "status" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "eventAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "MessagePriority" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "MessageType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "MessageAck" : {
      "type" : "object",
      "properties" : {
        "RecordType" : {
          "type" : "string"
        },
        "DeviceId" : {
          "type" : "string"
        },
        "DeviceMessageId" : {
          "type" : "string"
        },
        "EventDateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "MessageRef" : {
          "type" : "string"
        }
      }
    },
    "MessageTemplate" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "subject" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "createdBy" : {
          "$ref" : "#/definitions/User"
        },
        "updatedBy" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "MeterThreshold" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fleetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "deviceType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "expression" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "EventAction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "timeAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "comment" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ACKNOWLEDGE", "CHECK", "COMMENT" ]
        },
        "eventType" : {
          "type" : "string",
          "enum" : [ "ALARM", "PRETRIP", "SPEED", "SUMMARY", "CSR", "GEO_ENTRY", "GEO_EXIT", "GEO_UNDERTIME", "GEO_OVERTIME", "GEO_SPEED", "TRIP_ENTRY", "TRIP_EXIT", "TRIP_STARTED", "TRIP_FINISHED", "TRIP_CHANGE", "FATIGUE_VIOLATION", "FATIGUE_PREDICTED", "IO", "GPIO", "SCHEDULE", "MESSAGE", "COMPANY", "TRIP", "DRIVER", "VEHICLE", "RUNSHEET", "JOB", "TPMS", "VPM_EA", "VPM_IT", "VPM_HB", "VPM_OR", "VPM_HC", "VPM_EOT", "VPM_EOP", "VPM_ECT", "VPM_HD", "VPM_IM", "FORM", "POSITION", "CAMERA", "REALTIME", "MOVING", "STATIONARY", "METER", "RUC", "MASS_MANAGEMENT", "CALENDAR_EXCEPTION", "ELD_VIOLATION", "DEVICE_METER", "VEHICLE_METER", "INSTALLATION", "SYSTEM_NOTIFICATION", "ENROLMENT" ]
        },
        "eventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "Notification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "filtered" : {
          "type" : "boolean"
        },
        "sms" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "boolean"
        },
        "onscreen" : {
          "type" : "boolean"
        },
        "popup" : {
          "type" : "boolean"
        },
        "eventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventType" : {
          "type" : "string",
          "enum" : [ "ALARM", "PRETRIP", "SPEED", "SUMMARY", "CSR", "GEO_ENTRY", "GEO_EXIT", "GEO_UNDERTIME", "GEO_OVERTIME", "GEO_SPEED", "TRIP_ENTRY", "TRIP_EXIT", "TRIP_STARTED", "TRIP_FINISHED", "TRIP_CHANGE", "FATIGUE_VIOLATION", "FATIGUE_PREDICTED", "IO", "GPIO", "SCHEDULE", "MESSAGE", "COMPANY", "TRIP", "DRIVER", "VEHICLE", "RUNSHEET", "JOB", "TPMS", "VPM_EA", "VPM_IT", "VPM_HB", "VPM_OR", "VPM_HC", "VPM_EOT", "VPM_EOP", "VPM_ECT", "VPM_HD", "VPM_IM", "FORM", "POSITION", "CAMERA", "REALTIME", "MOVING", "STATIONARY", "METER", "RUC", "MASS_MANAGEMENT", "CALENDAR_EXCEPTION", "ELD_VIOLATION", "DEVICE_METER", "VEHICLE_METER", "INSTALLATION", "SYSTEM_NOTIFICATION", "ENROLMENT" ]
        },
        "docId" : {
          "type" : "string"
        },
        "eventAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dismissedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "notificationType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "subtitle" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "INFO", "SUCCESS", "WARNING", "ERROR" ]
        },
        "progressCurrent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "progressError" : {
          "type" : "integer",
          "format" : "int32"
        },
        "progressTotal" : {
          "type" : "integer",
          "format" : "int32"
        },
        "event" : {
          "type" : "object"
        },
        "detailsUrl" : {
          "type" : "string"
        },
        "eventActions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EventAction"
          }
        },
        "ignition" : {
          "type" : "string"
        },
        "extras" : {
          "$ref" : "#/definitions/SystemNotificationExtra"
        }
      }
    },
    "SystemNotificationExtra" : {
      "type" : "object",
      "properties" : {
        "Type" : {
          "type" : "string",
          "enum" : [ "COMPANY", "FLEET", "VEHICLE", "DEVICE", "GEOFENCE", "USER", "CUSTOMER", "SUBSCRIPTION", "SUBSCRIPTION_PACK", "LOCATION", "RUNSHEET", "JOB", "ATTACHMENT", "PRETRIP", "MESSAGE", "DRIVER_EVENT", "FATIGUE_EVENT", "PTC_EVENT", "FORM", "FORM_EVENT", "VEHICLE_TYPE", "CONTACT", "SHIFT", "REGISTRATION_CODE", "ROLE", "DEVICE_AGREEMENT", "GEOFENCE_ASSOCIATION", "VEHICLE_MAINTENANCE_TYPE", "FOLDER", "DOCUMENT", "VEHICLE_MAINTENANCE_SCHEDULE", "SCHEDULE", "TRIP", "DEVICE_CONFIGURATION", "WIFI", "DRIVER_MANAGEMENT_TYPE", "DRIVER_MANAGEMENT_SCHEDULE", "USER_TYPE", "SUGGESTED_EDIT", "VEHICLE_AXLE_COMBINATION", "MASS_SHCEME_CONFIG", "VEHICLE_CONFIG", "MASS_MANAGEMENT", "CALENDAR", "METER_THRESHOLD", "EXTERNAL_ASSOCIATION", "VEHICLE_DRIVER_ASSOCIATION", "VEHICLE_MODEL", "BULK_IMPORT", "ENROLMENT", "SAP_ITEM", "INSTALL_KIT", "AVAILABLE_KIT", "COMPATIBLE_MODEL" ]
        },
        "CreatedDateTime" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "Status" : {
          "type" : "string"
        },
        "RetryEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "PreTrip" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "associations" : {
          "type" : "string"
        },
        "checklistId" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "isDVIR" : {
          "type" : "boolean"
        },
        "createMaintSchedule" : {
          "type" : "boolean"
        }
      }
    },
    "Region" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "geocode" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string"
        },
        "config" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "platform" : {
          "type" : "string"
        },
        "nextgenUrl" : {
          "type" : "string"
        },
        "tn360Url" : {
          "type" : "string"
        },
        "tn360PdfUrl" : {
          "type" : "string"
        },
        "apiUrl" : {
          "type" : "string"
        },
        "supportEmail" : {
          "type" : "string"
        }
      }
    },
    "RegistrationCode" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "workOrder" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "Role" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "path" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "global" : {
          "type" : "boolean"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "permissions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Permission"
          }
        }
      }
    },
    "SapItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "sapCode" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "installKitId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "childItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SapItem"
          }
        }
      }
    },
    "DeviceEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "path" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "eventType" : {
          "type" : "string"
        },
        "subType" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "odometer" : {
          "type" : "number",
          "format" : "double"
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "EngineMgtSummaryEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "gpsOdoStart" : {
          "type" : "number",
          "format" : "double"
        },
        "gpsOdoEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "ignitionOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "ignitionOff" : {
          "type" : "string",
          "format" : "date-time"
        },
        "plausible" : {
          "type" : "boolean"
        },
        "fuelConsumptionStart" : {
          "type" : "number",
          "format" : "double"
        },
        "fuelConsumptionEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "distanceStart" : {
          "type" : "number",
          "format" : "double"
        },
        "distanceEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "engineHourStart" : {
          "type" : "number",
          "format" : "double"
        },
        "engineHourEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "harshBrake" : {
          "type" : "string"
        },
        "excessiveAccel" : {
          "type" : "string"
        },
        "fuelComsumption" : {
          "type" : "string"
        },
        "overRevving" : {
          "type" : "string"
        },
        "idle" : {
          "type" : "string"
        },
        "vehicleMaintenanceStatus" : {
          "type" : "string"
        },
        "oilTemperatureStatus" : {
          "type" : "string"
        },
        "coolantTemperatureStatus" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string"
        },
        "startLocation" : {
          "type" : "string"
        },
        "endLocation" : {
          "type" : "string"
        },
        "calculatedFuelConsumption" : {
          "type" : "number",
          "format" : "double"
        },
        "calculatedGpsDiffOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "calculatedCanDiffOdometer" : {
          "type" : "number",
          "format" : "double"
        },
        "calculatedGpsDiffEngineHour" : {
          "type" : "number",
          "format" : "double"
        },
        "calculatedCanDiffEngineHour" : {
          "type" : "number",
          "format" : "double"
        },
        "diagnosticTroubleCodes" : {
          "type" : "string"
        },
        "view" : {
          "type" : "string"
        },
        "extras" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceEvent"
          }
        },
        "odometerInfo" : {
          "$ref" : "#/definitions/SummaryEventOdometerInfo"
        },
        "canOdoStart" : {
          "type" : "number",
          "format" : "double"
        },
        "canOdoEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "odoOffsetGpsStart" : {
          "type" : "number",
          "format" : "double"
        },
        "odoOffsetGpsEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "odoOffsetCanStart" : {
          "type" : "number",
          "format" : "double"
        },
        "odoOffsetCanEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "origin" : {
          "type" : "string"
        },
        "hoursCanStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hoursCanEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "hoursOffsetCanStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hoursOffsetCanEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hvSocStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hvRangeStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hvSohStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hvChargeAhStart" : {
          "type" : "number",
          "format" : "double"
        },
        "hvSocEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "hvRangeEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "hvSohEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "hvChargeAhEnd" : {
          "type" : "number",
          "format" : "double"
        },
        "attr" : {
          "type" : "string"
        },
        "IgnOnGPS" : {
          "$ref" : "#/definitions/Gps"
        },
        "IgnOffGPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "SummaryEventOdometerInfo" : {
      "type" : "object",
      "properties" : {
        "EngineMgtSummaryEventId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startOdo" : {
          "$ref" : "#/definitions/VehicleMeter"
        },
        "endOdo" : {
          "$ref" : "#/definitions/VehicleMeter"
        },
        "distance" : {
          "type" : "number",
          "format" : "double"
        },
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExternalAssociation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "destinationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "COMPANY", "FLEET", "VEHICLE", "DEVICE", "GEOFENCE", "USER", "CUSTOMER", "SUBSCRIPTION", "SUBSCRIPTION_PACK", "LOCATION", "RUNSHEET", "JOB", "ATTACHMENT", "PRETRIP", "MESSAGE", "DRIVER_EVENT", "FATIGUE_EVENT", "PTC_EVENT", "FORM", "FORM_EVENT", "VEHICLE_TYPE", "CONTACT", "SHIFT", "REGISTRATION_CODE", "ROLE", "DEVICE_AGREEMENT", "GEOFENCE_ASSOCIATION", "VEHICLE_MAINTENANCE_TYPE", "FOLDER", "DOCUMENT", "VEHICLE_MAINTENANCE_SCHEDULE", "SCHEDULE", "TRIP", "DEVICE_CONFIGURATION", "WIFI", "DRIVER_MANAGEMENT_TYPE", "DRIVER_MANAGEMENT_SCHEDULE", "USER_TYPE", "SUGGESTED_EDIT", "VEHICLE_AXLE_COMBINATION", "MASS_SHCEME_CONFIG", "VEHICLE_CONFIG", "MASS_MANAGEMENT", "CALENDAR", "METER_THRESHOLD", "EXTERNAL_ASSOCIATION", "VEHICLE_DRIVER_ASSOCIATION", "VEHICLE_MODEL", "BULK_IMPORT", "ENROLMENT", "SAP_ITEM", "INSTALL_KIT", "AVAILABLE_KIT", "COMPATIBLE_MODEL" ]
        },
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalId" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string",
          "enum" : [ "GS1", "API", "APIEX", "COOLTRAX", "EWD", "NETRADYNE" ]
        }
      }
    },
    "VehicleUser" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "DEFAULT" ]
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "CompatibleDeviceModel" : {
      "type" : "object",
      "properties" : {
        "pids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pid"
          }
        },
        "availableKits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KitDetails"
          }
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Kit" : {
      "type" : "object",
      "properties" : {
        "parts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KitItem"
          }
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sapCode" : {
          "type" : "string"
        }
      }
    },
    "KitDetails" : {
      "type" : "object",
      "properties" : {
        "kit" : {
          "$ref" : "#/definitions/Kit"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instructions" : {
          "type" : "string"
        },
        "documentUrl" : {
          "type" : "string"
        },
        "regions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "kitType" : {
          "type" : "string"
        }
      }
    },
    "KitItem" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sapCode" : {
          "type" : "string"
        }
      }
    },
    "Pid" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "busType" : {
          "type" : "string"
        },
        "pid" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "extras" : {
          "type" : "string"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        }
      }
    },
    "VehicleCompatibilityDetails" : {
      "type" : "object",
      "properties" : {
        "vehicleModel" : {
          "$ref" : "#/definitions/VehicleModel"
        },
        "deviceModels" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CompatibleDeviceModel"
          }
        }
      }
    },
    "VehicleCombination" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "axleGroups" : {
          "type" : "integer",
          "format" : "int32"
        },
        "axles" : {
          "type" : "integer",
          "format" : "int32"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "visualization" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "VehicleMassConfig" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "vehicleCombinationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vehicleCombination" : {
          "$ref" : "#/definitions/VehicleCombination"
        },
        "jurisdiction" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "massSchemes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VehicleMassSchemes"
          }
        },
        "fleets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Fleet"
          }
        },
        "vehicles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vehicle"
          }
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "versions" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalId" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "boolean"
        }
      }
    },
    "VehicleMassSchemes" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "grossMass" : {
          "type" : "number",
          "format" : "double"
        },
        "steer" : {
          "type" : "number",
          "format" : "double"
        },
        "drive" : {
          "type" : "number",
          "format" : "double"
        },
        "group3" : {
          "type" : "number",
          "format" : "double"
        },
        "group4" : {
          "type" : "number",
          "format" : "double"
        },
        "group5" : {
          "type" : "number",
          "format" : "double"
        },
        "group6" : {
          "type" : "number",
          "format" : "double"
        },
        "group7" : {
          "type" : "number",
          "format" : "double"
        },
        "group8" : {
          "type" : "number",
          "format" : "double"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED", "READY_FOR_DOWNLOAD", "PENDING", "AVAILABLE", "UNAVAILABLE", "FAILED", "AVAILABLE_ON_REQUEST", "REQUESTED", "REMOVED" ]
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "selected" : {
          "type" : "boolean"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "massConfigurationsId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Utilization" : {
      "type" : "object",
      "properties" : {
        "utilizationVehicles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UtilizationVehicle"
          }
        },
        "footerDayTotals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UtilizationDay"
          }
        },
        "footerPeriodTotal" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "UtilizationDay" : {
      "type" : "object",
      "properties" : {
        "dayAt" : {
          "type" : "string"
        },
        "engineDuration" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "UtilizationVehicle" : {
      "type" : "object",
      "properties" : {
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "lastUpdateAt" : {
          "type" : "string"
        },
        "lastEngineReported" : {
          "type" : "number",
          "format" : "double"
        },
        "utilizationDays" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UtilizationDay"
          }
        },
        "utilizationPeriodTotal" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "RebaseRequest" : {
      "type" : "object",
      "properties" : {
        "meter" : {
          "type" : "string"
        },
        "base" : {
          "type" : "number",
          "format" : "double"
        },
        "rebaseAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "VoipEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "type" : {
          "type" : "string"
        },
        "channelType" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "extra" : {
          "type" : "string"
        },
        "linkedId" : {
          "type" : "string"
        },
        "context" : {
          "type" : "string"
        },
        "accountId" : {
          "type" : "string"
        },
        "destination" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "WifiDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "name" : {
          "type" : "string"
        },
        "ssid" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "companyIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "fleetIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "MassMngtEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "geofence" : {
          "$ref" : "#/definitions/Geofence"
        },
        "groupId" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ENTRY", "EXIT", "OVERTIME", "UNDERTIME", "SPEED", "NOTIFICATION", "MANIFEST" ]
        },
        "gps" : {
          "$ref" : "#/definitions/Gps"
        },
        "location" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string"
        },
        "odometer" : {
          "type" : "number",
          "format" : "double"
        },
        "fuelConsumption" : {
          "type" : "number",
          "format" : "double"
        },
        "distance" : {
          "type" : "number",
          "format" : "double"
        },
        "engineHours" : {
          "type" : "number",
          "format" : "double"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32"
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plausible" : {
          "type" : "boolean"
        },
        "trigger" : {
          "type" : "string"
        },
        "notificationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notificationAcknowledgementTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notificationMessage" : {
          "type" : "string"
        }
      }
    },
    "PositionEvent" : {
      "type" : "object",
      "properties" : {
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "GPS" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Gps"
          }
        }
      }
    },
    "PreTripEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "path" : {
          "type" : "string"
        },
        "checklistId" : {
          "type" : "string"
        },
        "checklistVersion" : {
          "type" : "string"
        },
        "checklistName" : {
          "type" : "string"
        },
        "vehicleRegNum" : {
          "type" : "string"
        },
        "vehicleRegState" : {
          "type" : "string"
        },
        "passed" : {
          "type" : "boolean"
        },
        "questions" : {
          "type" : "string"
        },
        "failedQuestions" : {
          "type" : "string"
        },
        "completedAt" : {
          "type" : "string"
        },
        "docId" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string"
        },
        "gps" : {
          "$ref" : "#/definitions/Gps"
        },
        "location" : {
          "type" : "string"
        },
        "completionDurationSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tripId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "CLOSED", "FAULTED", "REPAIRED", "INPROGRESS", "UNKNOWN" ]
        },
        "createdBy" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedBy" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "notes" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "extra" : {
          "type" : "string"
        }
      }
    },
    "FormEvent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "form" : {
          "$ref" : "#/definitions/Form"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "device" : {
          "$ref" : "#/definitions/Device"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "content" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "timeAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "updatedAt" : {
          "$ref" : "#/definitions/LocalDateTime"
        },
        "GPS" : {
          "$ref" : "#/definitions/Gps"
        }
      }
    },
    "PendingStartofDay" : {
      "type" : "object",
      "properties" : {
        "actAt" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeZone" : {
          "type" : "string"
        },
        "startOfDay" : {
          "type" : "string"
        }
      }
    }
  }
}